<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="RandRWAppC" loc="19:RandRWAppC.nc">
      <documentation loc="10:RandRWAppC.nc">
        <short>&#10; Block storage test application.</short>
        <long>&#10; Block storage test application. Does a pattern of random reads and&#10; writes, based on mote id. See README.txt for more details.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandRWC" loc="16:RandRWC.nc">
      <documentation loc="10:RandRWC.nc">
        <short>&#10; Block storage test application.</short>
        <long>&#10; Block storage test application. Does a pattern of random reads and&#10; writes, based on mote id. See README.txt for more details.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandRWAppC.BlockStorageC" loc="23(RandRWAppC.BlockStorageC):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageP" loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc" safe="">
      <documentation loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
        <short>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.</short>
        <long>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.&#10;&#10; @author: Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireBlockStorageP" loc="18:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/WireBlockStorageP.nc">
      <documentation loc="11:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/WireBlockStorageP.nc">
        <short>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.</short>
        <long>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="At45dbC" loc="29:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbC.nc">
      <documentation loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbC.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MainC" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/sim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/mica/sim/PlatformC.nc">
      <documentation loc="1:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id$&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:27">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:23">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:22">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:21">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:20">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:19">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:18">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:17">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:16">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="10:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/mica/sim/MeasureClockC.nc">
      <documentation loc="3:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/mica/sim/MeasureClockC.nc">
        <short>&#10; Simulation version of MeasureClockC for the mica platform.</short>
        <long>&#10; Simulation version of MeasureClockC for the mica platform. See &#10; tos/platforms/mica/MeasureClockC.nc for more details.&#10;&#10; @author Phil Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="35:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="34:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="24:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <documentation loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; Ideally, your receive history size should be equal to the number of&#10; RF neighbors your node will have&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaP" loc="3:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/csma/sim/CC2420CsmaP.nc">
      <module/>
    </component>
    <component qname="At45dbC.Arbiter" loc="79(At45dbC.Arbiter):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="59:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:at45db.resource">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="At45dbC.Arbiter.Queue" loc="32(At45dbC.Arbiter.Queue):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter.Arbiter" loc="52(At45dbC.Arbiter.Arbiter):/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbP" loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <module/>
    </component>
    <component qname="At45dbStorageManagerC" loc="17:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbStorageManagerC.nc" safe="">
      <documentation loc="11:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbStorageManagerC.nc">
        <short>&#10; HAL component providing information on the flash volumes.</short>
        <long>&#10; HAL component providing information on the flash volumes.&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id$&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="37:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SerialActiveMessageC.nc">
      <documentation loc="60:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockStorageC" loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc" abstract="">
      <documentation loc="12:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="volid" ref="0x1017b0340" loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
          <component-ref qname="BlockStorageC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x1016f9df0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x1019c0410" loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x1019c0778" loc="33:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x1019c0ae0" loc="34:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x1019c0e10" loc="35:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/sim/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x101c39da8" loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x101a37a58" loc="33:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x101a37dc0" loc="34:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x101a69160" loc="35:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x101a69490" loc="36:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x10199c890" loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x10199cbd8" loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x101998020" loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x101c51020" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="59:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x10186ae68" loc="79:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="At45dbBlockConfig" loc="19:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
      <documentation loc="13:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <short>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; </short>
        <long>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <function event="" provided="0" name="npages" ref="0x1017d7020" loc="50:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="46:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Return size of a config volume in pages (half of the actual block)&#10; </short>
          <long>&#10; Return size of a config volume in pages (half of the actual block)&#10; @return Config volume size&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flipped" ref="0x1017da580" loc="30:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="26:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Query which half of the block is used by the current config state&#10; </short>
          <long>&#10; Query which half of the block is used by the current config state&#10; @return TRUE for 2nd half, FALSE for 1st half&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isConfig" ref="0x1017bae28" loc="24:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="20:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Check if this block is a config volumes&#10; </short>
          <long>&#10; Check if this block is a config volumes&#10; @return TRUE for config volumes, FALSE for block volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeHook" ref="0x1017dacd8" loc="37:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Hook called by block storage just before the start of each write&#10; </short>
          <long>&#10; Hook called by block storage just before the start of each write&#10; @return TRUE to delay the write until &#60;code>writeContinue&#60;/code>&#10;    is called, FALSE to proceed immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="remap" ref="0x1017d7a18" loc="58:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; </short>
          <long>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; @param page Volume-relative page&#10; @return Actual flash page for &#60;code>page&#60;/code>&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x1017d77a8" loc="58:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeContinue" ref="0x1017d8730" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="38:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; </short>
          <long>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; @param error SUCCESS to continue write, anything else to abort write &#10;   returning that error code&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1017d84c0" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x101bca5d8" loc="99:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="93:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x101bca020" loc="99:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x101bca358" loc="99:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x101bcb020" loc="86:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="83:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x101b91660" loc="80:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x101b91020" loc="80:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x101b913e0" loc="80:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x101b975f8" loc="53:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x101b97388" loc="53:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x101bcb828" loc="91:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="88:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x101b94748" loc="65:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x101b944d8" loc="65:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x101b95648" loc="59:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x101b953d8" loc="59:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x101bc8750" loc="110:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="107:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x101b927c8" loc="71:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x101b92558" loc="71:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x101bcae68" loc="105:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="101:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x101b95d90" loc="64:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x101ba5c20" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x101b97ce0" loc="58:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x101b94e78" loc="70:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x10173cc08" loc="92:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x10173c998" loc="92:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x10173a0a8" loc="117:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x10173bdb8" loc="117:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x10173c020" loc="83:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x10173b448" loc="109:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision$&#10; @date $Date$&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x101c3d020" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x101c3d8e8" loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x101c387d0" loc="55:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x101c38020" loc="49:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45db" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
      <documentation loc="34:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. This provides&#10; reasonably high-level operations on AT45DB pages, including automatic&#10; buffer management. Writes are only guaranteed to happen after a flush,&#10; flushAll, sync or syncAll.&#10; &#60;p>&#10; When buffers are flushed to the flash (either explicitly or implicitly),&#10; their contents are checked to ensure the write was succesful. If this&#10; check fails, the flush is retried some number of times. If this fails&#10; more than some number of times, all access to the flash is disabled&#10; (all requests will report FAIL in their completion event).&#10; &#60;p>&#10; This interface only supports one operation at a time - components offering&#10; At45db should use the &#60;code>Resource&#60;/code> interface for resource sharing.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x1017bf580" loc="162:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="157:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Signal completion of a read operation.</short>
          <long>&#10; Signal completion of a read operation. The buffer passed to read&#10; is implictly returned.&#10; @param error SUCCESS for a successful read, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1017bf310" loc="162:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x1017c5830" loc="125:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="121:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Signal completion of a sync or syncAll operation.</short>
          <long>&#10; Signal completion of a sync or syncAll operation. &#10; @param error SUCCESS if the sync was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1017c55c0" loc="125:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x1017c2430" loc="143:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="139:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Signal completion of an flush or flushAll operation.</short>
          <long>&#10; Signal completion of an flush or flushAll operation. &#10; @param error SUCCESS if the flush was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1017c21c0" loc="143:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x1017c0950" loc="155:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="145:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Read some data from an AT45DB page.</short>
          <long>&#10; Read some data from an AT45DB page. readDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x101710850"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x101710850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x1017c2b50" loc="155:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x1017c0020" loc="155:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x101710850"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x1017c0350" loc="156:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x1017c06b0" loc="156:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x101710850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x1017a0918" loc="69:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="64:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Signal completion of a write operation.</short>
          <long>&#10; Signal completion of a write operation. The buffer passed to write&#10; is implictly returned.&#10; @param error SUCCESS for a successful write, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1017a06a8" loc="69:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copyPage" ref="0x10179f670" loc="80:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="71:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Copy one flash page to another.</short>
          <long>&#10; Copy one flash page to another. copyDone will be signaled. If page&#10; from had been modified, it is first flushed to flash. Page&#10; &#60;code>to&#60;/code> will only actually be written when the buffer holding&#10; it is flushed (see flush, flushAll, sync, syncAll).&#10;&#10; @param from Flash page to copy. Must be less than AT45_MAX_PAGES.&#10; @param to Flash page to overwrite. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="from" ref="0x10179f0c8" loc="80:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </variable>
          <variable name="to" ref="0x10179f3f0" loc="80:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x1017c8020" loc="100:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="87:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Erase an AT45DB page.</short>
          <long>&#10; Erase an AT45DB page. eraseDone will be signaled.&#10; @param page Flash page to erase. Must be less than AT45_MAX_PAGES.&#10; @param eraseKind How to handle the erase:&#10;   &#60;br>&#60;code>AT45_ERASE&#60;/code>: actually erase the page in the flash chip&#10;   &#60;br>&#60;code>AT45_DONT_ERASE&#60;/code>: don't erase the page in the flash &#10;     chip, but reserve a buffer for this page - subsequent writes to this&#10;     page will be faster because the old contents need not be read&#10;   &#60;br>&#60;code>AT45_PREVIOUSLY_ERASED&#60;/code>: assume the page was previously&#10;     erased in the flash and reserve a buffer for this page - subsequent&#10;     writes to page will be faster because the old contents need not be &#10;     read and the write itself will be faster&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x10179d9a0" loc="100:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </variable>
          <variable name="eraseKind" ref="0x10179dcf0" loc="100:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x1017c8bf8" loc="105:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="101:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Signal completion of an erase operation.</short>
          <long>&#10; Signal completion of an erase operation. &#10; @param error SUCCESS if the erase was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1017c8988" loc="105:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x1017bc928" loc="183:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="178:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Signal completion of a CRC computation.</short>
          <long>&#10; Signal completion of a CRC computation.&#10; @param error SUCCESS if the CRC was successfully computed, FAIL otherwise&#10; @param crc CRC value (valid only if error == SUCCESS)&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1017bc388" loc="183:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x1017bc6a8" loc="183:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x1017c3290" loc="133:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="127:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. flushDone&#10; will be signaled once the flush has been initiated. If the page is not&#10; in the buffers, flushDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x1017c3020" loc="133:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="syncAll" ref="0x1017c6da0" loc="120:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="115:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flushAll" ref="0x1017c3a70" loc="138:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="134:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. flushDone&#10; will be signaled once the flushes have been initiated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1017a2d88" loc="62:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="53:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Write some data to an AT45DB page.</short>
          <long>&#10; Write some data to an AT45DB page. writeDone will be signaled.&#10; @param page Flash page to write to. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x101710850"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x101710850"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x1017a20c8" loc="62:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x1017a2458" loc="62:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x101710850"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x1017a2788" loc="63:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x1017a2ae8" loc="63:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x101710850"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x1017c6598" loc="114:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="107:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. If the page is not&#10; in the buffers, syncDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x1017c6328" loc="114:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x1017bea30" loc="176:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="164:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h).</short>
          <long>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h). computeCrcDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous computeCrc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x101710850"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x101710850"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x1017bfce8" loc="176:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x1017be0c8" loc="176:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x101710850"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x1017be448" loc="177:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x101710850"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x1017be790" loc="177:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="copyPageDone" ref="0x10179d290" loc="85:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
        <documentation loc="81:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
          <short>&#10; Signal completion of a copyPage operation.</short>
          <long>&#10; Signal completion of a copyPage operation. &#10; @param error SUCCESS if the copy was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x10179d020" loc="85:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x101b88538" loc="95:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b882c8" loc="95:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x101b8b918" loc="81:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b8b6a8" loc="81:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x101b8d108" loc="66:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x101b8ee70" loc="66:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x101b8e640" loc="60:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x101b8e3d0" loc="60:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x101b8dac0" loc="73:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x101b8d850" loc="73:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x101b8a768" loc="88:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b8a4f8" loc="88:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x1016fbc18" loc="49:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x1016c5258" loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x1016c5a48" loc="64:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x101ba10a8" loc="54:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b7ddc0" loc="54:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x101ba0108" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101ba1e20" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x101b9b380" loc="115:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b9dd50" loc="115:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101b9b0c8" loc="115:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x101b9d4c0" loc="95:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x101b9f5b0" loc="83:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b9f020" loc="83:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101b9f330" loc="83:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x101747060" loc="69:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10165e020"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x101728730" loc="69:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10165e020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x101728a90" loc="69:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101728da0" loc="69:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x1017425e8" loc="124:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101742020" loc="124:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101742330" loc="124:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x1017416a0" loc="112:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x101746370" loc="85:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101746100" loc="85:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x101744820" loc="99:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101744278" loc="99:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x1017445a0" loc="99:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x101b63388" loc="64:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b67da8" loc="64:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101b63108" loc="64:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x101b5f708" loc="114:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b5f140" loc="114:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101b5f450" loc="114:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x101b5e8e8" loc="101:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x101b62608" loc="78:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b62398" loc="78:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x101b60a38" loc="89:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b60490" loc="89:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x101b607b8" loc="89:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockRead" loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
      <function command="" provided="0" name="read" ref="0x101732b60" loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a read operation within a given volume.</short>
          <long>&#10; Initiate a read operation within a given volume. On SUCCESS, the&#10; &#60;code>readDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#10; @param addr starting address to begin reading.&#10; @param 'void* COUNT(len) buf' buffer to place read data.&#10; @param len number of bytes to read.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x101732280" loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x101732580" loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1017328d0" loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x10172b5e8" loc="95:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="86:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a crc computation.</short>
          <long>&#10; Signals the completion of a crc computation.&#10;&#10; @param addr stating address.&#10; @param len number of bytes the crc was computed over.&#10; @param crc the resulting crc value.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x10172e8c0" loc="95:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x10172ec10" loc="95:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x10172b020" loc="96:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x10172b348" loc="96:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x10172e020" loc="83:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="70:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a crc computation.</short>
          <long>&#10; Initiate a crc computation. On SUCCESS, the&#10; &#60;code>computeCrcDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @param addr starting address.&#10; @param len the number of bytes to compute the crc over.&#10; @parm crc initial CRC value&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x10172d650" loc="83:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x10172d9a0" loc="83:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x10172dce0" loc="84:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0x10172be18" loc="103:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="98:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).</short>
          <long>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).&#10; @return Volume size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x101731748" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <documentation loc="58:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param addr starting address of read.&#10; @param 'void* COUNT(len) buf' buffer where read data was placed.&#10; @param len number of bytes read.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x101730ab8" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x101730db8" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101731160" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x1017314a8" loc="68:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockWrite" loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
      <documentation loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <short>&#10; Write interface for the block storage abstraction described in&#10; TEP103.</short>
        <long>&#10; Write interface for the block storage abstraction described in&#10; TEP103.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x101721c60" loc="112:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="105:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a sync operation.</short>
          <long>&#10; Signals the completion of a sync operation. All written data is&#10; flushed to non-volatile storage after this event.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1017219f0" loc="112:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x101724020" loc="71:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="60:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation. However, data is not&#10; guaranteed to survive a power-cycle unless a sync operation has&#10; been completed.&#10;&#10; @param addr starting address of write.&#10; @param 'void* COUNT(len) buf' buffer that written data was read from.&#10; @param len number of bytes written.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x101726280" loc="71:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x101726580" loc="71:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x1017268d0" loc="71:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x101726c18" loc="72:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x101723020" loc="83:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="74:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate an erase operation.</short>
          <long>&#10; Initiate an erase operation. On SUCCESS, the&#10; &#60;code>eraseDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x101723a18" loc="91:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="85:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of an erase operation.</short>
          <long>&#10; Signals the completion of an erase operation.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x1017237a8" loc="91:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x1017272b0" loc="58:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a write operation within a given volume.</short>
          <long>&#10; Initiate a write operation within a given volume. On SUCCESS, the&#10; &#60;code>writeDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#60;p>&#10; Between two erases, no byte may be written more than once.&#10; &#10; @param addr starting address to begin write.&#10; @param 'void* COUNT(len) buf' buffer to write data from.&#10; @param len number of bytes to write.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x1016f88a0" loc="58:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x1016f8ba0" loc="58:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101727020" loc="58:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x1017211d8" loc="103:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
        <documentation loc="93:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a sync operation to finalize writes to the volume.</short>
          <long>&#10; Initiate a sync operation to finalize writes to the volume. A&#10; sync operation must be issued to ensure that data is stored in&#10; non-volatile storage. On SUCCES, the &#60;code>syncDone&#60;/code> event&#10; will signal completion of the operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x101936360" loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
      <documentation loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x101bc54a0" loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
        <documentation loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x10165d560"/>
              <typename><typedef-ref name="tossim_header_t" ref="0x10165cbd0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101bc51f8" loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x101bc3020" loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
        <documentation loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x10165ba98"/>
              <typename><typedef-ref name="tossim_metadata_t" ref="0x101659e28"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101bc5c98" loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/interfaces/sim/CC2420PacketBody.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date$ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x1018710d8" loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x10186f0d8" loc="73:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x101874888" loc="46:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x1018718d8" loc="65:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x10186f9a0" loc="81:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x101b59760" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
              <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b66e10" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x101b59188" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101b59498" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x101c2e620" loc="69:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x101c398d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x101c2e3b0" loc="69:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x101c398d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x101c31790" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x101c30290" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x101c398d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x101c30020" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x101c398d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x101c30b30" loc="60:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x101c398d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="34:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
      <documentation loc="24:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x101aea4d0" loc="36:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x101aea260" loc="36:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x101ae7358" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x10050e228"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x101ae89e0" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x101ae8d18" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101ae70c8" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x10050e228"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x101ae5070" loc="41:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x101ae79b0" loc="40:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x101aedb28" loc="35:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRadioChannel" ref="0x101ae5a20" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newRadioChannel" ref="0x101ae57b0" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x101ae8328" loc="38:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRadioChannel" ref="0x101ae4178" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x101aeac10" loc="37:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x10194fe28" loc="33:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x10194d520" loc="34:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x10194f0d8" loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x10194c328" loc="36:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x10194f778" loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x10194dbd8" loc="35:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x101950360" loc="29:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x1019509d0" loc="30:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x10171d748" loc="50:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x10171de80" loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x10171b618" loc="61:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x10171a4b8" loc="72:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x101718ab0" loc="89:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x101717290" loc="106:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x10171bd30" loc="66:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x101717d90" loc="123:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x101717b20" loc="123:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x10171d030" loc="45:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x10171ac28" loc="78:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x101718378" loc="83:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x101ea43b0" loc="48:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101ea4140" loc="48:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x101ea3520" loc="60:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101ea32b0" loc="60:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x101ea1608" loc="74:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101ea1398" loc="74:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbVolume" loc="18:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
      <documentation loc="13:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
        <short>&#10; AT45DB interface for managing flash volumes.</short>
        <long>&#10; AT45DB interface for managing flash volumes.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="volumeSize" ref="0x1017b6020" loc="30:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="26:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Find the flash volume size&#10; </short>
          <long>&#10; Find the flash volume size&#10; @return Flash volume size in pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remap" ref="0x1017b87d8" loc="24:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="19:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Map a volume page to the corresponding page in the whole flash&#10; </short>
          <long>&#10; Map a volume page to the corresponding page in the whole flash&#10; @return What flash page this volume page maps to, or &#10;   AT45_MAX_PAGES for invalid volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="volumePage" ref="0x1017b8568" loc="24:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45dbVolume.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="53:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision$&#10; @date $Date$&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x1017de3e0" loc="110:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x1017b44c0" loc="87:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x1017bbb88" loc="78:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x1017b4c48" loc="92:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x1017dedc8" loc="118:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="40:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x101b83020" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x101b85610" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x101b85970" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x101b85c80" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x101b81468" loc="79:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="74:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b811f8" loc="79:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x101b83b80" loc="64:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="54:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b83910" loc="64:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x101b82a00" loc="71:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="66:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b82458" loc="71:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x101b82780" loc="71:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x101b81e60" loc="80:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x101b81bf0" loc="80:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x101ba9810" loc="166:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x101660b50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x101ba95a0" loc="166:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x101b7a758" loc="77:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10165e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x101b7a4e8" loc="77:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x101b86c30" loc="57:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10165e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x101b7b6f0" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x10165e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x101b7b480" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x101b77020" loc="110:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10165e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x101b769b0" loc="110:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x101b76ce8" loc="110:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10165e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x101b78ac8" loc="92:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10165e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x101b78510" loc="92:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x101b78848" loc="92:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x10165e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x101bac418" loc="136:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x1016607a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x101bac1a8" loc="136:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x101baa6c0" loc="151:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1016607a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x101baa140" loc="151:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x101baa440" loc="151:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x1016607a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x101b73290" loc="125:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x101b73020" loc="125:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x101ba6c28" loc="176:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x101660b50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x101ba6678" loc="176:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
                <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x101ba69a8" loc="176:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x101660b50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x101ba4a30" loc="184:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x101660b50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x10186d720" loc="80:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x10186b020" loc="88:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x1010b1020" loc="46:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x101201020" loc="61:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x1010b1718" loc="54:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <enum loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Leds.h" ref="0x1016fa990" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="bnd" loc="9:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x1005109d0" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x100510ed8" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x100512030" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct loc="102:/usr/include/stdlib.h" ref="0x10100a5a8" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x10100a868" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x10100a998" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="_opaque_pthread_cond_t" loc="65:/usr/include/sys/_types.h" ref="0x10052e710" defined="" size="I:48" alignment="I:8">
      <field name="__sig" ref="0x10052edd8" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x100530020" bit-offset="I:64" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <nx_struct name="tossim_metadata" loc="19:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h" ref="0x10165ba98" defined="" size="I:6" alignment="I:1">
      <field name="strength" ref="0x101659790" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x10070c450"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x1016598c0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x100711020"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x1016599f0" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x100711020"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0x101659b20" bit-offset="I:24" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x1007116e8"/></typename>
        </type-int>
      </field>
      <field name="destroyable" ref="0x101659c50" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x100711020"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="gain_entry" loc="48:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_gain.h" ref="0x101497848" defined="" size="I:32" alignment="I:8">
      <field name="mote" ref="0x1014962a0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x1014963d0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="channel" ref="0x101496500" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="next" ref="0x101496630" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:32" alignment="I:8"><struct-ref name="gain_entry" ref="0x101497848"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct loc="30:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/timer/Timer.h" ref="0x101cd08c8" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x101cd0b88" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="fd_set" loc="184:/usr/include/sys/_structs.h" ref="0x1013b6560" defined="" size="I:128" alignment="I:4">
      <field name="fds_bits" ref="0x1013cf2c0" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__int32_t" ref="0x100522d10"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0x10050b078" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="100:/usr/include/sys/_structs.h" ref="0x1007d5300" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x1007d5a30" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_time_t" ref="0x10052b160"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x1007d5b60" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_suseconds_t" ref="0x100543450"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sim_gain_noise" loc="3:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_gain.c" ref="0x1014a7998" defined="" size="I:16" alignment="I:8">
      <field name="mean" ref="0x1014a5020" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x1014a5150" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct loc="271:/usr/include/inttypes.h" ref="0x100554d10" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x100555020" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="intmax_t" ref="0x100550ae0"/></typename>
        </type-int>
      </field>
      <field name="rem" ref="0x100555150" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="intmax_t" ref="0x100550ae0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sigaction" loc="309:/usr/include/sys/signal.h" ref="0x1007d28d8" defined="" size="I:16" alignment="I:8">
      <field name="__sigaction_u" ref="0x1007d01e8" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="__sigaction_u" ref="0x1007cdc30"/></type-tag>
      </field>
      <field name="sa_mask" ref="0x1007d0318" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="sigset_t" ref="0x1007c8908"/></typename>
        </type-int>
      </field>
      <field name="sa_flags" ref="0x1007d0448" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="nonnull" loc="8:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x10050ed88" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x100510338" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="_opaque_pthread_t" loc="72:/usr/include/sys/_types.h" ref="0x100535850" defined="" size="I:1184" alignment="I:8">
      <field name="__sig" ref="0x1005362d8" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__cleanup_stack" ref="0x100536408" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_pthread_handler_rec" ref="0x10052b540"/></type-tag>
        </type-pointer>
      </field>
      <field name="__opaque" ref="0x100536538" bit-offset="I:128" size="I:1168">
        <type-array elements="I:1168" size="I:1168" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <attribute name="number"  loc="NONE" ref="0x1005080b8" size="V:" alignment="V:">
    </attribute>
    <struct name="accessx_descriptor" loc="138:/usr/include/sys/unistd.h" ref="0x101ccfbc8" defined="" size="I:16" alignment="I:4">
      <field name="ad_name_offset" ref="0x101ccc540" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="ad_flags" ref="0x101ccc670" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="ad_pad" ref="0x101ccc7a0" bit-offset="I:64" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sigstack" loc="390:/usr/include/sys/signal.h" ref="0x1007d92c0" defined="" size="I:16" alignment="I:8">
      <field name="ss_sp" ref="0x1007d98d8" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="ss_onstack" ref="0x1007d9a08" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="85:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x101946850" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x101946b10" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x101946c40" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x101946d70" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="node" loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/heap.c" ref="0x101343220" defined="" size="I:16" alignment="I:8">
      <field name="data" ref="0x101343898" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x1013439c8" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_debug_state32" loc="326:/usr/include/mach/i386/_structs.h" ref="0x10079a650" defined="" size="I:32" alignment="I:4">
      <field name="__dr0" ref="0x1007a3688" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr1" ref="0x1007a37b8" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr2" ref="0x1007a38e8" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr3" ref="0x1007a3a18" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr4" ref="0x1007a3b48" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr5" ref="0x1007a3c78" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr6" ref="0x1007a3da8" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__dr7" ref="0x1007a3ed8" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="98:/usr/include/runetype.h" ref="0x10119d148" defined="" size="I:3208" alignment="I:8">
      <field name="__magic" ref="0x10119d408" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__encoding" ref="0x10119d538" bit-offset="I:64" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__sgetrune" ref="0x10119d668" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4">
              <typename><typedef-ref name="__darwin_rune_t" ref="0x100528dd8"/></typename>
            </type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
              </type-pointer>
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="__darwin_size_t" ref="0x100528198"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-pointer size="I:8" alignment="I:8">
                  <type-qualified const="">
                    <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                  </type-qualified>
                </type-pointer>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__sputrune" ref="0x10119d7d8" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4">
                <typename><typedef-ref name="__darwin_rune_t" ref="0x100528dd8"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="__darwin_size_t" ref="0x100528198"/></typename>
              </type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-pointer size="I:8" alignment="I:8">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-pointer>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__invalid_rune" ref="0x10119d958" bit-offset="I:448" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x100528dd8"/></typename>
        </type-int>
      </field>
      <field name="__runetype" ref="0x10119da88" bit-offset="I:480" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__uint32_t" ref="0x100523130"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__maplower" ref="0x10119dbb8" bit-offset="I:8672" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__darwin_rune_t" ref="0x100528dd8"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__mapupper" ref="0x10119dce8" bit-offset="I:16864" size="I:1024">
        <type-array elements="I:256" size="I:1024" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__darwin_rune_t" ref="0x100528dd8"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="__runetype_ext" ref="0x10119de18" bit-offset="I:25088" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x101191510"/>
          <typename><typedef-ref name="_RuneRange" ref="0x101191ad8"/></typename>
        </type-tag>
      </field>
      <field name="__maplower_ext" ref="0x10119a020" bit-offset="I:25216" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x101191510"/>
          <typename><typedef-ref name="_RuneRange" ref="0x101191ad8"/></typename>
        </type-tag>
      </field>
      <field name="__mapupper_ext" ref="0x10119a150" bit-offset="I:25344" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x101191510"/>
          <typename><typedef-ref name="_RuneRange" ref="0x101191ad8"/></typename>
        </type-tag>
      </field>
      <field name="__variable" ref="0x10119a280" bit-offset="I:25472" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__variable_len" ref="0x10119a3b0" bit-offset="I:25536" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ncharclasses" ref="0x10119a5e0" bit-offset="I:25568" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__charclasses" ref="0x10119a710" bit-offset="I:25600" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:20" alignment="I:4"><struct-ref ref="0x10118f2e0"/>
            <typename><typedef-ref name="_RuneCharClass" ref="0x10118f8a8"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <nx_struct name="serial_packet" loc="120:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x101675a78" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0x101674240" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x101676360"/>
          <typename><typedef-ref name="serial_header_t" ref="0x101675738"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x101674370" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x100711020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <attribute name="integer"  loc="NONE" ref="0x100505d08" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="91:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/tos.h" ref="0x101297bd8" defined="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_log.c" ref="0x1012a2bd8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union name="message_footer" loc="46:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/platform_message.h" ref="0x101671368" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x1016718f8" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x10165b020"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x10165b748"/></typename>
        </type-tag>
      </field>
    </union>
    <union name="message_metadata" loc="50:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/platform_message.h" ref="0x10166f020" defined="" size="I:6" alignment="I:1">
      <field name="tossim" ref="0x10166f5d8" bit-offset="I:0" size="I:6">
        <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x10165ba98"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x101659e28"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="combine"  loc="NONE" ref="0x1005096e8" size="V:" alignment="V:">
      <field name="fn" ref="0x1005099a8" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct name="__darwin_mcontext64" loc="68:/usr/include/i386/_structs.h" ref="0x1007b87a8" defined="" size="I:712" alignment="I:8">
      <field name="__es" ref="0x1007b7740" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__darwin_x86_exception_state64" ref="0x1007b2ab8"/></type-tag>
      </field>
      <field name="__ss" ref="0x1007b7870" bit-offset="I:128" size="I:168">
        <type-tag size="I:168" alignment="I:8"><struct-ref name="__darwin_x86_thread_state64" ref="0x1007a2278"/></type-tag>
      </field>
      <field name="__fs" ref="0x1007b79a0" bit-offset="I:1472" size="I:524">
        <type-tag size="I:524" alignment="I:4"><struct-ref name="__darwin_x86_float_state64" ref="0x1007a9960"/></type-tag>
      </field>
    </struct>
    <struct ref="0x100504510" size="V:" alignment="V:">
    </struct>
    <struct name="__darwin_fp_status" loc="147:/usr/include/mach/i386/_structs.h" ref="0x10078a440" defined="" size="I:2" alignment="I:2">
      <field name="__invalid" ref="0x1007875b8" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__denorm" ref="0x1007876e8" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__zdiv" ref="0x100787818" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__ovrfl" ref="0x100787948" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__undfl" ref="0x100787a78" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__precis" ref="0x100787ba8" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__stkflt" ref="0x100787cd8" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__errsumm" ref="0x100787e08" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c0" ref="0x100792020" bit-offset="I:8" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c1" ref="0x100792150" bit-offset="I:9" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c2" ref="0x100792280" bit-offset="I:10" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__tos" ref="0x1007923b0" bit-offset="I:11" bit-size="I:3">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__c3" ref="0x1007924e0" bit-offset="I:14" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__busy" ref="0x100792710" bit-offset="I:15" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <struct name="__darwin_sigaltstack" loc="75:/usr/include/sys/_structs.h" ref="0x1007c11c8" defined="" size="I:24" alignment="I:8">
      <field name="ss_sp" ref="0x1007c19e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="ss_size" ref="0x1007c1b10" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_size_t" ref="0x100528198"/></typename>
        </type-int>
      </field>
      <field name="ss_flags" ref="0x1007c1c40" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="__sigaction_u" loc="292:/usr/include/sys/signal.h" ref="0x1007cdc30" defined="" size="I:8" alignment="I:8">
      <field name="__sa_handler" ref="0x1007c9390" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__sa_sigaction" ref="0x1007c94e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x1007c4560"/></type-tag>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </union>
    <enum loc="55:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_log.c" ref="0x10129d438" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="serial_header" loc="112:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x101676360" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x1016750a0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x101660410"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x1016751d0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x101660410"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x101675300" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x100711020"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x101675430" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x101660020"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x101675560" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x101662a98"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union name="message_header" loc="41:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/platform_message.h" ref="0x101672540" defined="" size="I:8" alignment="I:1">
      <field name="tossim" ref="0x101672cd8" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x10165d560"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x10165cbd0"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x101672e08" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x101676360"/>
          <typename><typedef-ref name="serial_header_t" ref="0x101675738"/></typename>
        </type-tag>
      </field>
    </union>
    <struct name="timespec" loc="88:/usr/include/sys/_structs.h" ref="0x1013b9aa0" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x1013b6150" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_time_t" ref="0x10052b160"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x1013b6280" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <attribute name="count" loc="11:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x100513408" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x1005137e8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="14:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/AM.h" ref="0x10165e260" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="bnd_nok" loc="10:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x1005126f0" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x100512bf8" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x100512d28" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct name="timezone" loc="143:/usr/include/sys/time.h" ref="0x1013c9410" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0x1013c9a48" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x1013c9b78" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="49:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x10191daf0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union name="wait" loc="201:/usr/include/sys/wait.h" ref="0x1007fc078" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0x1007fa8d0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_T" ref="0x1007faa00" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x1007fb020"/></type-tag>
      </field>
      <field name="w_S" ref="0x1007fab30" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x1007fa0b8"/></type-tag>
      </field>
    </union>
    <struct name="__darwin_ucontext" loc="128:/usr/include/sys/_structs.h" ref="0x1007bf020" defined="" size="I:56" alignment="I:8">
      <field name="uc_onstack" ref="0x1007be1a8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="uc_sigmask" ref="0x1007be2d8" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_sigset_t" ref="0x100543020"/></typename>
        </type-int>
      </field>
      <field name="uc_stack" ref="0x1007be408" bit-offset="I:64" size="I:24">
        <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_sigaltstack" ref="0x1007c11c8"/></type-tag>
      </field>
      <field name="uc_link" ref="0x1007be538" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:56" alignment="I:8"><struct-ref name="__darwin_ucontext" ref="0x1007bf020"/></type-tag>
        </type-pointer>
      </field>
      <field name="uc_mcsize" ref="0x1007be668" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__darwin_size_t" ref="0x100528198"/></typename>
        </type-int>
      </field>
      <field name="uc_mcontext" ref="0x1007be798" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:712" alignment="I:8"><struct-ref name="__darwin_mcontext64" ref="0x1007b87a8"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="_opaque_pthread_once_t" loc="69:/usr/include/sys/_types.h" ref="0x100532680" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x100532d48" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x100532e78" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h" ref="0x101872280" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_event" loc="45:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_event_queue.h" ref="0x1012748d8" defined="" size="I:48" alignment="I:8">
      <field name="time" ref="0x101272888" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x10126b020"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x1012729b8" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="force" ref="0x101272ae8" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x101272c18" bit-offset="I:136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x101272d48" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x101272e78" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1012748d8"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x101274d70"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x101270020" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1012748d8"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x101274d70"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <enum loc="26:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/AM.h" ref="0x10165e968" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__siginfo" loc="200:/usr/include/sys/signal.h" ref="0x1007c4560" defined="" size="I:104" alignment="I:8">
      <field name="si_signo" ref="0x1007c3a90" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_errno" ref="0x1007c3bc0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_code" ref="0x1007c3cf0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_pid" ref="0x1007c3e20" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="pid_t" ref="0x10077c280"/></typename>
        </type-int>
      </field>
      <field name="si_uid" ref="0x1007cd020" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uid_t" ref="0x1007c8cd0"/></typename>
        </type-int>
      </field>
      <field name="si_status" ref="0x1007cd150" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="si_addr" ref="0x1007cd280" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="si_value" ref="0x1007cd3b0" bit-offset="I:256" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x1007c7020"/></type-tag>
      </field>
      <field name="si_band" ref="0x1007cd4e0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__pad" ref="0x1007cd610" bit-offset="I:384" size="I:56">
        <type-array elements="I:7" size="I:56" alignment="I:8">
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="34:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x10191fcf8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="16:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h" ref="0x101710a90" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="97:/usr/include/stdlib.h" ref="0x10100c9e0" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x10100cca0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x10100cdd0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct name="tossim_footer" loc="15:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h" ref="0x10165b020" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x10165b570" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x100714e38"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="sim_packet" loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_packet.h" ref="0x10164fc88" defined="" size="I:0" alignment="I:1">
    </struct>
    <enum loc="4:simbuild/micaz/StorageVolumes.h" ref="0x101296378" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="serial_metadata" loc="125:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x1016749b0" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x101672020" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x100711020"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="__darwin_mcontext32" loc="48:/usr/include/i386/_structs.h" ref="0x1007b96b8" defined="" size="I:600" alignment="I:4">
      <field name="__es" ref="0x1007b8240" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="__darwin_i386_exception_state" ref="0x10079b850"/></type-tag>
      </field>
      <field name="__ss" ref="0x1007b8370" bit-offset="I:96" size="I:64">
        <type-tag size="I:64" alignment="I:4"><struct-ref name="__darwin_i386_thread_state" ref="0x1007861e0"/></type-tag>
      </field>
      <field name="__fs" ref="0x1007b84a0" bit-offset="I:608" size="I:524">
        <type-tag size="I:524" alignment="I:4"><struct-ref name="__darwin_i386_float_state" ref="0x10078f6a8"/></type-tag>
      </field>
    </struct>
    <attribute name="atmostonce" loc="89:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/tos.h" ref="0x101297388" defined="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="123:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x101940078" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sigvec" loc="371:/usr/include/sys/signal.h" ref="0x1007da020" defined="" size="I:16" alignment="I:8">
      <field name="sv_handler" ref="0x1007dac60" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sv_mask" ref="0x1007dadb0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sv_flags" ref="0x1007d9020" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/timer/Timer.h" ref="0x101ccf1d8" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x101ccf498" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="_opaque_pthread_rwlockattr_t" loc="71:/usr/include/sys/_types.h" ref="0x100534d10" defined="" size="I:24" alignment="I:8">
      <field name="__sig" ref="0x100535448" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x100535578" bit-offset="I:64" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="120:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h" ref="0x101920208" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="hwevent"  loc="NONE" ref="0x100508c68" size="V:" alignment="V:">
    </attribute>
    <enum loc="79:/usr/include/sys/wait.h" ref="0x10077f2b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x10191d020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="hashtable" ref="0x101295818" size="V:" alignment="V:">
    </struct>
    <struct name="heap" loc="50:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/heap.h" ref="0x1013330b8" defined="" size="I:24" alignment="I:8">
      <field name="size" ref="0x101333880" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x1013339b0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x101333ae0" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="safe"  loc="NONE" ref="0x10050b3d8" size="V:" alignment="V:">
    </attribute>
    <struct loc="81:/usr/include/runetype.h" ref="0x1011925f0" defined="" size="I:24" alignment="I:8">
      <field name="__min" ref="0x1011928b0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x100528dd8"/></typename>
        </type-int>
      </field>
      <field name="__max" ref="0x1011929e0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x100528dd8"/></typename>
        </type-int>
      </field>
      <field name="__map" ref="0x101192b10" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__darwin_rune_t" ref="0x100528dd8"/></typename>
        </type-int>
      </field>
      <field name="__types" ref="0x101192c40" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__uint32_t" ref="0x100523130"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <enum loc="83:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x10167c0b8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_i386_thread_state" loc="43:/usr/include/mach/i386/_structs.h" ref="0x1007861e0" defined="" size="I:64" alignment="I:4">
      <field name="__eax" ref="0x100785ed8" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ebx" ref="0x100784030" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ecx" ref="0x100784160" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__edx" ref="0x100784290" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__edi" ref="0x1007843c0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__esi" ref="0x1007844f0" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ebp" ref="0x100784620" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__esp" ref="0x100784750" bit-offset="I:224" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ss" ref="0x100784880" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__eflags" ref="0x1007849b0" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__eip" ref="0x100784ae0" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__cs" ref="0x100784c10" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ds" ref="0x100784d40" bit-offset="I:384" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__es" ref="0x100782020" bit-offset="I:416" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__fs" ref="0x100782150" bit-offset="I:448" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__gs" ref="0x100782280" bit-offset="I:480" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="76:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x101658540" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="206:/usr/include/sys/wait.h" ref="0x1007fb020" defined="" size="I:4" alignment="I:4">
      <field name="w_Termsig" ref="0x1007fb2e0" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Coredump" ref="0x1007fb410" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Retcode" ref="0x1007fb540" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Filler" ref="0x1007fb670" bit-offset="I:16" bit-size="I:16">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_float_state64" loc="413:/usr/include/mach/i386/_structs.h" ref="0x1007a9960" defined="" size="I:524" alignment="I:4">
      <field name="__fpu_reserved" ref="0x1007ad318" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x1007ad448" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x1007825a8"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x1007ad578" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x10078a440"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x1007ad6a8" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x1005222b0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x1007ad7d8" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x1005222b0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x1007ad908" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x1005229b0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x1007ada38" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x100523130"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x1007adb68" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x1005229b0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x1007adc98" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x1005229b0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x1007addc8" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x100523130"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x1007ab020" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x1005229b0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x1007ab150" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x1005229b0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x1007ab280" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x100523130"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x1007ab4b0" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x100523130"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x1007ab5e0" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x1007ab710" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x1007ab840" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x1007ab970" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x1007abaa0" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x1007abbd0" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x1007abd00" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x1007abe30" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x1007b5020" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x1007b5150" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x1007b5280" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x1007b55b0" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x1007b56e0" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x1007b5810" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x1007b5940" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x1007b5a70" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm8" ref="0x1007b5ba0" bit-offset="I:2368" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm9" ref="0x1007b5cd0" bit-offset="I:2496" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm10" ref="0x1007b5e00" bit-offset="I:2624" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm11" ref="0x1007b2020" bit-offset="I:2752" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm12" ref="0x1007b2150" bit-offset="I:2880" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm13" ref="0x1007b2280" bit-offset="I:3008" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm14" ref="0x1007b23b0" bit-offset="I:3136" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm15" ref="0x1007b24e0" bit-offset="I:3264" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x1007b2610" bit-offset="I:3392" size="I:96">
        <type-array elements="I:96" size="I:96" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x1007b2740" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_exception_state64" loc="517:/usr/include/mach/i386/_structs.h" ref="0x1007b2ab8" defined="" size="I:16" alignment="I:8">
      <field name="__trapno" ref="0x1007bc368" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__err" ref="0x1007bc498" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__faultvaddr" ref="0x1007bc5c8" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="tm" loc="90:/usr/include/time.h" ref="0x1013c5640" defined="" size="I:56" alignment="I:8">
      <field name="tm_sec" ref="0x1013c49e8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x1013c4b18" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x1013c4c48" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x1013c4d78" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x1013c4ea8" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x1013de020" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x1013de150" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x1013de280" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x1013de3b0" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x1013de4e0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="tm_zone" ref="0x1013de610" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </struct>
    <struct name="_opaque_pthread_attr_t" loc="64:/usr/include/sys/_types.h" ref="0x10052d9a0" defined="" size="I:64" alignment="I:8">
      <field name="__sig" ref="0x10052e2d8" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x10052e408" bit-offset="I:64" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sim_log_output" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_log.c" ref="0x1012a03b8" defined="" size="I:16" alignment="I:8">
      <field name="num" ref="0x1012a0a98" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x1012a0bc8" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x1011e2498"/>
              <typename><typedef-ref name="FILE" ref="0x1011edb48"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <enum loc="129:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x101940b80" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="radio_stats" loc="98:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x10167a7d8" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0x101678178" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x1016782a8" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x1016783d8" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x101678508" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x101678638" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x101678768" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x101678898" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x1016789c8" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x101678af8" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x101678c28" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x101678d58" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="one_nok" loc="14:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x1005165b0" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x1005169b8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="dmemset" loc="15:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x100517100" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x100517648" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x100517778" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x1005178a8" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__sbuf" loc="98:/usr/include/stdio.h" ref="0x1011e36f0" defined="" size="I:16" alignment="I:8">
      <field name="_base" ref="0x1011e3d10" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_size" ref="0x1011e3e40" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="atleastonce" loc="90:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/tos.h" ref="0x1012977b0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="673:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h" ref="0x1018a60b8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="93:/usr/include/runetype.h" ref="0x10118f2e0" defined="" size="I:20" alignment="I:4">
      <field name="__name" ref="0x10118f5a0" bit-offset="I:0" size="I:14">
        <type-array elements="I:14" size="I:14" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__mask" ref="0x10118f6d0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x100523130"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="fssearchblock" ref="0x101d9bb80" size="V:" alignment="V:">
    </struct>
    <enum loc="111:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x101942a18" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="135:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x10193f678" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="itimerval" loc="93:/usr/include/sys/time.h" ref="0x1013ca808" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x1013c9020" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1007d5300"/></type-tag>
      </field>
      <field name="it_value" ref="0x1013c9150" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1007d5300"/></type-tag>
      </field>
    </struct>
    <struct name="__sFILEX" ref="0x1011e2110" size="V:" alignment="V:">
    </struct>
    <union loc="76:/usr/include/i386/_types.h" ref="0x100525c40" defined="" size="I:128" alignment="I:8">
      <field name="__mbstate8" ref="0x100526020" bit-offset="I:0" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_mbstateL" ref="0x100526150" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct name="__sigaction" loc="299:/usr/include/sys/signal.h" ref="0x1007c97d8" defined="" size="I:24" alignment="I:8">
      <field name="__sigaction_u" ref="0x1007d2240" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="__sigaction_u" ref="0x1007cdc30"/></type-tag>
      </field>
      <field name="sa_tramp" ref="0x1007d2370" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x1007c4560"/>
                  <typename><typedef-ref name="siginfo_t" ref="0x1007cd7e8"/></typename>
                </type-tag>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sa_mask" ref="0x1007d2500" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="sigset_t" ref="0x1007c8908"/></typename>
        </type-int>
      </field>
      <field name="sa_flags" ref="0x1007d2630" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="count_nok" loc="12:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x100514020" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x100514400" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="__darwin_mmst_reg" loc="191:/usr/include/mach/i386/_structs.h" ref="0x100790020" defined="" size="I:16" alignment="I:1">
      <field name="__mmst_reg" ref="0x1007908e8" bit-offset="I:0" size="I:10">
        <type-array elements="I:10" size="I:10" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__mmst_rsrv" ref="0x100790a18" bit-offset="I:80" size="I:6">
        <type-array elements="I:6" size="I:6" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sigevent" loc="191:/usr/include/sys/signal.h" ref="0x1007c7a28" defined="" size="I:32" alignment="I:8">
      <field name="sigev_notify" ref="0x1007c5d40" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sigev_signo" ref="0x1007c5e70" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sigev_value" ref="0x1007c4020" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x1007c7020"/></type-tag>
      </field>
      <field name="sigev_notify_function" ref="0x1007c4150" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-tag size="I:8" alignment="I:8"><union-ref name="sigval" ref="0x1007c7020"/></type-tag>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="sigev_notify_attributes" ref="0x1007c42a0" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x10052d9a0"/>
            <typename><typedef-ref name="pthread_attr_t" ref="0x1007c8500"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="48:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h" ref="0x10193b820" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="clockinfo" loc="186:/usr/include/sys/time.h" ref="0x1013c6020" defined="" size="I:20" alignment="I:4">
      <field name="hz" ref="0x1013c6a00" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tick" ref="0x1013c6b30" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tickadj" ref="0x1013c6c60" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="stathz" ref="0x1013c6d90" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="profhz" ref="0x1013c6ec0" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="one" loc="13:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x100514a98" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x100514ea0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="108:/usr/include/stdlib.h" ref="0x1010091b8" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x101009478" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x1010095a8" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="46:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Storage.h" ref="0x101712d38" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="spontaneous"  loc="NONE" ref="0x100509388" size="V:" alignment="V:">
    </attribute>
    <enum loc="40:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h" ref="0x1012dd0b8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="141:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x10193d348" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x10193d608" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x10193d738" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x10193d868" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x10193d998" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x10193dac8" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x10193dbf8" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__darwin_x86_debug_state64" loc="535:/usr/include/mach/i386/_structs.h" ref="0x1007bc918" defined="" size="I:64" alignment="I:8">
      <field name="__dr0" ref="0x1007bbab8" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__dr1" ref="0x1007bbbe8" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__dr2" ref="0x1007bbd18" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__dr3" ref="0x1007bbe48" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__dr4" ref="0x1007b9020" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__dr5" ref="0x1007b9150" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__dr6" ref="0x1007b9280" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__dr7" ref="0x1007b93b0" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="88:/usr/include/runetype.h" ref="0x101191510" defined="" size="I:16" alignment="I:8">
      <field name="__nranges" ref="0x1011917d0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__ranges" ref="0x101191900" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref ref="0x1011925f0"/>
            <typename><typedef-ref name="_RuneEntry" ref="0x101192e18"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="__darwin_fp_control" loc="89:/usr/include/mach/i386/_structs.h" ref="0x1007825a8" defined="" size="I:2" alignment="I:2">
      <field name="__invalid" ref="0x10078b020" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__denorm" ref="0x10078b150" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__zdiv" ref="0x10078b280" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__ovrfl" ref="0x10078b3b0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__undfl" ref="0x10078b4e0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__precis" ref="0x10078b610" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__pc" ref="0x10078b860" bit-offset="I:8" bit-size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__rc" ref="0x10078b990" bit-offset="I:10" bit-size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <attribute name="unsafe"  loc="NONE" ref="0x10050b738" size="V:" alignment="V:">
    </attribute>
    <enum loc="95:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1019442a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_x86_thread_state64" loc="358:/usr/include/mach/i386/_structs.h" ref="0x1007a2278" defined="" size="I:168" alignment="I:8">
      <field name="__rax" ref="0x1007a0bd8" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__rbx" ref="0x1007a0d08" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__rcx" ref="0x1007a0e38" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__rdx" ref="0x1007aa020" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__rdi" ref="0x1007aa150" bit-offset="I:256" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__rsi" ref="0x1007aa280" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__rbp" ref="0x1007aa3b0" bit-offset="I:384" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__rsp" ref="0x1007aa4e0" bit-offset="I:448" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__r8" ref="0x1007aa610" bit-offset="I:512" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__r9" ref="0x1007aa740" bit-offset="I:576" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__r10" ref="0x1007aa870" bit-offset="I:640" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__r11" ref="0x1007aa9a0" bit-offset="I:704" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__r12" ref="0x1007aaad0" bit-offset="I:768" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__r13" ref="0x1007aad00" bit-offset="I:832" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__r14" ref="0x1007aae30" bit-offset="I:896" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__r15" ref="0x1007a9020" bit-offset="I:960" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__rip" ref="0x1007a9150" bit-offset="I:1024" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__rflags" ref="0x1007a9280" bit-offset="I:1088" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__cs" ref="0x1007a93b0" bit-offset="I:1152" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__fs" ref="0x1007a94e0" bit-offset="I:1216" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
      <field name="__gs" ref="0x1007a9610" bit-offset="I:1280" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="rusage" loc="144:/usr/include/sys/resource.h" ref="0x1007e03c0" defined="" size="I:144" alignment="I:8">
      <field name="ru_utime" ref="0x1007dd1a8" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1007d5300"/></type-tag>
      </field>
      <field name="ru_stime" ref="0x1007dd2d8" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x1007d5300"/></type-tag>
      </field>
      <field name="ru_maxrss" ref="0x1007dd408" bit-offset="I:256" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_ixrss" ref="0x1007dd538" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_idrss" ref="0x1007dd668" bit-offset="I:384" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_isrss" ref="0x1007dd798" bit-offset="I:448" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_minflt" ref="0x1007dd8c8" bit-offset="I:512" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_majflt" ref="0x1007dd9f8" bit-offset="I:576" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nswap" ref="0x1007ddb28" bit-offset="I:640" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_inblock" ref="0x1007ddc58" bit-offset="I:704" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_oublock" ref="0x1007ddd88" bit-offset="I:768" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_msgsnd" ref="0x1007ddeb8" bit-offset="I:832" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_msgrcv" ref="0x1007db020" bit-offset="I:896" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nsignals" ref="0x1007db250" bit-offset="I:960" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nvcsw" ref="0x1007db380" bit-offset="I:1024" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="ru_nivcsw" ref="0x1007db4b0" bit-offset="I:1088" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="rlimit" loc="215:/usr/include/sys/resource.h" ref="0x1007db798" defined="" size="I:16" alignment="I:8">
      <field name="rlim_cur" ref="0x1007dbe08" bit-offset="I:0" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="rlim_t" ref="0x1007e0020"/></typename>
        </type-int>
      </field>
      <field name="rlim_max" ref="0x1007ea020" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="rlim_t" ref="0x1007e0020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="36:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45db_chip.h" ref="0x1017114c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h" ref="0x101408bf8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__darwin_i386_exception_state" loc="308:/usr/include/mach/i386/_structs.h" ref="0x10079b850" defined="" size="I:12" alignment="I:4">
      <field name="__trapno" ref="0x10079a0a0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__err" ref="0x10079a1d0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__faultvaddr" ref="0x10079a300" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="225:/usr/include/sys/wait.h" ref="0x1007fa0b8" defined="" size="I:4" alignment="I:4">
      <field name="w_Stopval" ref="0x1007fa378" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Stopsig" ref="0x1007fa4a8" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="w_Filler" ref="0x1007fa5d8" bit-offset="I:16" bit-size="I:16">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="nts" loc="17:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x10051a020" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x10051a428" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="exception" loc="571:/usr/include/architecture/i386/math.h" ref="0x1011869b8" defined="" size="I:40" alignment="I:8">
      <field name="type" ref="0x101185420" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x101185550" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x101185680" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x1011857b0" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x1011858e0" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="__darwin_xmm_reg" loc="210:/usr/include/mach/i386/_structs.h" ref="0x100790d28" defined="" size="I:16" alignment="I:1">
      <field name="__xmm_reg" ref="0x10078f340" bit-offset="I:0" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sim_log_channel" loc="48:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_log.c" ref="0x10129f150" defined="" size="I:24" alignment="I:8">
      <field name="name" ref="0x10129fbc0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x10129fcf0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x10129fe20" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x10129d020" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x1011e2498"/>
              <typename><typedef-ref name="FILE" ref="0x1011edb48"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <struct name="__darwin_pthread_handler_rec" loc="58:/usr/include/sys/_types.h" ref="0x10052b540" defined="" size="I:24" alignment="I:8">
      <field name="__routine" ref="0x10052d418" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="__arg" ref="0x10052d568" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__next" ref="0x10052d698" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_pthread_handler_rec" ref="0x10052b540"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="38:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45db.h" ref="0x101709020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="C"  loc="NONE" ref="0x100508908" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h" ref="0x101403610" defined="" size="I:488" alignment="I:8">
      <field name="key" ref="0x101402570" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x1014026a0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x1014027d0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x101402900" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x101402a30" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x101402b60" bit-offset="I:352" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <struct loc="29:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/timer/Timer.h" ref="0x101cd0020" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x101cd02e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="searchstate" ref="0x101d99020" size="V:" alignment="V:">
    </struct>
    <attribute name="macro"  loc="NONE" ref="0x100509b78" size="V:" alignment="V:">
      <field name="macro_name" ref="0x100509e38" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct name="_opaque_pthread_rwlock_t" loc="70:/usr/include/sys/_types.h" ref="0x1005341d0" defined="" size="I:200" alignment="I:8">
      <field name="__sig" ref="0x100534898" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x1005349c8" bit-offset="I:64" size="I:192">
        <type-array elements="I:192" size="I:192" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <union name="sigval" loc="181:/usr/include/sys/signal.h" ref="0x1007c7020" defined="" size="I:8" alignment="I:8">
      <field name="sival_int" ref="0x1007c7678" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="sival_ptr" ref="0x1007c77a8" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </union>
    <enum loc="68:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/tos.h" ref="0x101257020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="message_t" loc="14:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/message.h" ref="0x10166fac8" defined="" size="I:44" alignment="I:1">
      <field name="header" ref="0x10166eea0" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x100711020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x10166d020" bit-offset="I:64" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x100711020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x10166d150" bit-offset="I:288" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x100711020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x10166d280" bit-offset="I:304" size="I:6">
        <type-array elements="I:6" size="I:6" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x100711020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="_opaque_pthread_condattr_t" loc="66:/usr/include/sys/_types.h" ref="0x100530350" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x100530a18" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x100530b48" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="_opaque_pthread_mutex_t" loc="67:/usr/include/sys/_types.h" ref="0x100531020" defined="" size="I:64" alignment="I:8">
      <field name="__sig" ref="0x1005316e8" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x100531818" bit-offset="I:64" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <nx_struct name="tossim_header" loc="6:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h" ref="0x10165d560" defined="" size="I:8" alignment="I:1">
      <field name="dest" ref="0x10165c408" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x101660410"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x10165c538" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x101660410"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x10165c668" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x100711020"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0x10165c798" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x100711020"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x10165c8c8" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x101660020"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x10165c9f8" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x101662a98"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct name="__darwin_i386_float_state" loc="232:/usr/include/mach/i386/_structs.h" ref="0x10078f6a8" defined="" size="I:524" alignment="I:4">
      <field name="__fpu_reserved" ref="0x100796ad8" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
      <field name="__fpu_fcw" ref="0x100796c08" bit-offset="I:64" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x1007825a8"/></type-tag>
      </field>
      <field name="__fpu_fsw" ref="0x100796d38" bit-offset="I:80" size="I:2">
        <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x10078a440"/></type-tag>
      </field>
      <field name="__fpu_ftw" ref="0x100796e68" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x1005222b0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv1" ref="0x100794020" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="__uint8_t" ref="0x1005222b0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_fop" ref="0x100794150" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x1005229b0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ip" ref="0x100794280" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x100523130"/></typename>
        </type-int>
      </field>
      <field name="__fpu_cs" ref="0x1007943b0" bit-offset="I:160" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x1005229b0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv2" ref="0x1007944e0" bit-offset="I:176" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x1005229b0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_dp" ref="0x100794610" bit-offset="I:192" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x100523130"/></typename>
        </type-int>
      </field>
      <field name="__fpu_ds" ref="0x100794740" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x1005229b0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_rsrv3" ref="0x100794870" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="__uint16_t" ref="0x1005229b0"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsr" ref="0x1007949a0" bit-offset="I:256" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x100523130"/></typename>
        </type-int>
      </field>
      <field name="__fpu_mxcsrmask" ref="0x100794bd0" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__uint32_t" ref="0x100523130"/></typename>
        </type-int>
      </field>
      <field name="__fpu_stmm0" ref="0x100794d00" bit-offset="I:320" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_stmm1" ref="0x100794e30" bit-offset="I:448" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_stmm2" ref="0x10079e020" bit-offset="I:576" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_stmm3" ref="0x10079e150" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_stmm4" ref="0x10079e280" bit-offset="I:832" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_stmm5" ref="0x10079e3b0" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_stmm6" ref="0x10079e4e0" bit-offset="I:1088" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_stmm7" ref="0x10079e610" bit-offset="I:1216" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_mmst_reg" ref="0x100790020"/></type-tag>
      </field>
      <field name="__fpu_xmm0" ref="0x10079e740" bit-offset="I:1344" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm1" ref="0x10079e870" bit-offset="I:1472" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm2" ref="0x10079e9a0" bit-offset="I:1600" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm3" ref="0x10079ecd0" bit-offset="I:1728" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm4" ref="0x10079ee00" bit-offset="I:1856" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm5" ref="0x10079b020" bit-offset="I:1984" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm6" ref="0x10079b150" bit-offset="I:2112" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_xmm7" ref="0x10079b280" bit-offset="I:2240" size="I:16">
        <type-tag size="I:16" alignment="I:1"><struct-ref name="__darwin_xmm_reg" ref="0x100790d28"/></type-tag>
      </field>
      <field name="__fpu_rsrv4" ref="0x10079b3b0" bit-offset="I:2368" size="I:224">
        <type-array elements="I:224" size="I:224" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__fpu_reserved1" ref="0x10079b4e0" bit-offset="I:4160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sim_noise_node_t" loc="65:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h" ref="0x101400198" defined="" size="I:80" alignment="I:8">
      <field name="key" ref="0x1013fd198" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="freqKey" ref="0x1013fd2c8" bit-offset="I:160" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x1013fd3f8" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="noiseGenTime" ref="0x1013fd528" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x100548b68"/></typename>
        </type-int>
      </field>
      <field name="noiseTable" ref="0x1013fd658" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x101295818"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x1013fd788" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x1013fd8b8" bit-offset="I:512" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x100548b68"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x1013fd9e8" bit-offset="I:544" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x100548b68"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x1013fdb18" bit-offset="I:576" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="_opaque_pthread_mutexattr_t" loc="68:/usr/include/sys/_types.h" ref="0x100531b50" defined="" size="I:16" alignment="I:8">
      <field name="__sig" ref="0x100532248" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__opaque" ref="0x100532378" bit-offset="I:64" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="91:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h" ref="0x10167b400" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__sFILE" loc="132:/usr/include/stdio.h" ref="0x1011e2498" defined="" size="I:152" alignment="I:8">
      <field name="_p" ref="0x1011dc020" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_r" ref="0x1011dc150" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_w" ref="0x1011dc280" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags" ref="0x1011dc3b0" bit-offset="I:128" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_file" ref="0x1011dc4e0" bit-offset="I:144" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_bf" ref="0x1011dc610" bit-offset="I:192" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x1011e36f0"/></type-tag>
      </field>
      <field name="_lbfsize" ref="0x1011dc740" bit-offset="I:320" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_cookie" ref="0x1011dc870" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="_close" ref="0x1011dc9a0" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_read" ref="0x1011dcaf0" bit-offset="I:512" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_seek" ref="0x1011dcc60" bit-offset="I:576" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="fpos_t" ref="0x1011e33f0"/></typename>
            </type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-int cname="long long" size="I:8" alignment="I:8">
                <typename><typedef-ref name="fpos_t" ref="0x1011e33f0"/></typename>
              </type-int>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_write" ref="0x1011dcdd0" bit-offset="I:640" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
              <type-pointer size="I:8" alignment="I:8">
                <type-qualified const="">
                  <type-int cname="char" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
              </type-pointer>
              <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="_ub" ref="0x1011ed020" bit-offset="I:704" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x1011e36f0"/></type-tag>
      </field>
      <field name="_extra" ref="0x1011ed250" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="__sFILEX" ref="0x1011e2110"/></type-tag>
        </type-pointer>
      </field>
      <field name="_ur" ref="0x1011ed380" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_ubuf" ref="0x1011ed4b0" bit-offset="I:928" size="I:3">
        <type-array elements="I:3" size="I:3" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_nbuf" ref="0x1011ed5e0" bit-offset="I:952" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lb" ref="0x1011ed710" bit-offset="I:960" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__sbuf" ref="0x1011e36f0"/></type-tag>
      </field>
      <field name="_blksize" ref="0x1011ed840" bit-offset="I:1088" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_offset" ref="0x1011ed970" bit-offset="I:1152" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="fpos_t" ref="0x1011e33f0"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="117:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h" ref="0x1019414e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x100509020" size="V:" alignment="V:">
    </attribute>
    <attribute name="dmemcpy" loc="16:/opt/nesc/lib/ncc/deputy_nodeputy.h" ref="0x100518020" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x100518568" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x100518698" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x1005187c8" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="59:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SerialActiveMessageC.nc" ref="0x101ed08b0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SerialActiveMessageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="60:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SerialActiveMessageC.nc" ref="0x101e67618" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SerialActiveMessageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="27:RandRWC.nc" ref="0x10173f1e8" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="RandRWC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="189:RandRWC.nc" ref="0x1017936b0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="RandRWC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="30:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc" ref="0x1017ae4f0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="BlockStorageC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="85:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc" ref="0x1017d5a68" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="BlockStorageP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="93:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc" ref="0x1017d1a00" defined="" scoped="" size="I:24" alignment="I:8">
      <component-ref qname="BlockStorageP"/>
      <field name="request" ref="0x1017d1cc0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </field>
      <field name="buf" ref="0x1017d1df0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="addr" ref="0x1017d0020" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
        </type-int>
      </field>
      <field name="len" ref="0x1017d0150" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="76:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc" ref="0x1017db4c8" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="BlockStorageP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="112:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc" ref="0x101cb5618" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="108:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc" ref="0x101d748b0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="104:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc" ref="0x101dfca38" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="45:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x1016c0020" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="75:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc" ref="0x101c52618" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="ArbiterP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" ref="0x101c33798" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="69:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc" ref="0x101c484f0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="ArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="68:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc" ref="0x101c49d48" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="ArbiterP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc" ref="0x101c4adb8" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="ArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc" ref="0x101d918b8" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
  </tags>
  <variables>
    <variable name="randCM" ref="0x10150a500" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x1015d5cf0" loc="282:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="current_node" ref="0x1014137a0" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="test" ref="0x10150ada0" loc="41:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="optarg" ref="0x101d36778" loc="515:/usr/include/unistd.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-pointer>
    </variable>
    <variable name="channelTable" ref="0x10129c8b8" loc="60:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x101295818"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0x10153ac28" loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:1280000" alignment="I:8">
        <type-array elements="I:16" size="I:1280" alignment="I:8">
          <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x101400198"/>
            <typename><typedef-ref name="sim_noise_node_t" ref="0x1013fdcf0"/></typename>
          </type-tag>
        </type-array>
      </type-array>
    </variable>
    <variable name="outputs" ref="0x10129c478" loc="59:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-array elements="I:131" size="I:2096" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x1012a03b8"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x1012a0da0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randU" ref="0x10150cd60" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="optind" ref="0x101d36ab8" loc="516:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="timezone" ref="0x1013dd618" loc="118:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x10138f8b0" loc="36:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x1013330b8"/>
        <typename><typedef-ref name="heap_t" ref="0x101333cb8"/></typename>
      </type-tag>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x10146c528" loc="46:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x10153d3a0" loc="50:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <documentation loc="24:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__stderrp" ref="0x1011ea7b0" loc="169:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x1011e2498"/>
          <typename><typedef-ref name="FILE" ref="0x1011edb48"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="randC" ref="0x10150a020" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="FreqKeyNum" ref="0x10153a3f0" loc="55:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x100548b68"/></typename>
      </type-int>
    </variable>
    <variable name="optreset" ref="0x101d95df8" loc="618:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaLow" ref="0x10146e020" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x10146d020" loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numTotal" ref="0x10153de10" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x1013dd970" loc="120:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x10146d548" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="randCD" ref="0x10150a290" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="getdate_err" ref="0x1013dece0" loc="116:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="j97" ref="0x10150aa70" loc="40:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x101257a98" loc="70:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x10120a4b8" loc="278:/usr/include/stdio.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="_CurrentRuneLocale" ref="0x1011981b8" loc="133:/usr/include/runetype.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x10119d148"/>
          <typename><typedef-ref name="_RuneLocale" ref="0x10119a8e8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="tzname" ref="0x1013de970" loc="113:/usr/include/time.h">
      <type-array elements="V:" size="V:" alignment="V:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x101344d40" loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="opterr" ref="0x101d36d28" loc="516:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="=va_arg" ref="0x1005048f8"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaHigh" ref="0x10146fa90" loc="38:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x10146da78" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x101908bd0" loc="45:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="24:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="__stdinp" ref="0x1011ea020" loc="167:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x1011e2498"/>
          <typename><typedef-ref name="FILE" ref="0x1011edb48"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="localNoise" ref="0x1014a4558" loc="9:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:256256" alignment="I:8">
        <type-array elements="I:16" size="I:256" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x1014a7998"/>
            <typename><typedef-ref name="sim_gain_noise_t" ref="0x1014a5328"/></typename>
          </type-tag>
        </type-array>
      </type-array>
    </variable>
    <variable name="crcTable" ref="0x101cb4220" loc="34:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/crc.h">
      <documentation loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <type-array elements="I:256" size="I:512" alignment="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="csmaInitLow" ref="0x10146f5b8" loc="37:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase2" ref="0x10153d938" loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="suboptarg" ref="0x101092e28" loc="589:/usr/include/unistd.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-pointer>
    </variable>
    <variable name="sim_ticks" ref="0x1014133e8" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x10126b020"/></typename>
      </type-int>
    </variable>
    <variable name="connectivity" ref="0x1014a5c00" loc="8:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:128128" alignment="I:8">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:32" alignment="I:8"><struct-ref name="gain_entry" ref="0x101497848"/>
              <typename><typedef-ref name="gain_entry_t" ref="0x101496808"/></typename>
            </type-tag>
          </type-pointer>
        </type-array>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x10120a020" loc="277:/usr/include/stdio.h">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="simTimeBuf" ref="0x101450d60" loc="175:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="__stdoutp" ref="0x1011ea3e8" loc="168:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x1011e2498"/>
          <typename><typedef-ref name="FILE" ref="0x1011edb48"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sim_seed" ref="0x101413af8" loc="45:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sensitivity" ref="0x1014a4890" loc="11:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="signgam" ref="0x1011895e8" loc="546:/usr/include/architecture/i386/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x10146f0c8" loc="36:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="optopt" ref="0x101d34020" loc="516:/usr/include/unistd.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_DefaultRuneLocale" ref="0x10119ad30" loc="132:/usr/include/runetype.h">
      <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x10119d148"/>
        <typename><typedef-ref name="_RuneLocale" ref="0x10119a8e8"/></typename>
      </type-tag>
    </variable>
    <variable name="csmaAckTime" ref="0x10146ca18" loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x10146e550" loc="40:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x10146c020" loc="45:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="__mb_cur_max" ref="0x101009b00" loc="134:/usr/include/stdlib.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x10146ea80" loc="41:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="i97" ref="0x10150a820" loc="40:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="actions" ref="0x10178edf0" loc="207:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-qualified const="">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-qualified const="">
              <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="mask" ref="0x10173d820" loc="34:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
      </type-int>
    </variable>
    <variable name="count" ref="0x101759320" loc="60:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="shiftReg" ref="0x10173d158" loc="32:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
      </type-int>
    </variable>
    <variable name="data" ref="0x10175bb58" loc="59:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-array elements="I:512" size="I:512" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="testCount" ref="0x1017595b0" loc="60:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="len" ref="0x101759b50" loc="61:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x100548b68"/></typename>
      </type-int>
    </variable>
    <variable name="offset" ref="0x101758020" loc="62:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x101759900" loc="61:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x100548b68"/></typename>
      </type-int>
    </variable>
    <variable name="reportMsg" ref="0x1017583a8" loc="63:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
        <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
      </type-tag>
    </variable>
    <variable name="initSeed" ref="0x10173d4d0" loc="33:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
      </type-int>
    </variable>
    <variable name="rdata" ref="0x101759020" loc="59:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-array elements="I:512" size="I:512" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="currentOffset" ref="0x1017d39f0" loc="91:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
      </type-int>
    </variable>
    <variable name="s" ref="0x1017d0410" loc="99:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-array elements="I:1" size="I:24" alignment="I:8">
        <type-tag size="I:24" alignment="I:8"><struct-ref scoped="" ref="0x1017d1a00"/></type-tag>
      </type-array>
    </variable>
    <variable name="client" ref="0x1017d3470" loc="90:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
      </type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x1016beda8" loc="58:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x1016be4f8" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x1016be1a8" loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x1016be980" loc="53:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:6" size="I:6" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x1016bd3c8" loc="59:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1012748d8"/>
        <typename><typedef-ref name="sim_event_t" ref="0x101274d70"/></typename>
      </type-tag>
    </variable>
    <variable name="radioChannel" ref="0x101aeb890" loc="49:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
      </type-int>
    </variable>
    <variable name="bootEvent" ref="0x101aeb500" loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1012748d8"/>
          <typename><typedef-ref name="sim_event_t" ref="0x101274d70"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x101aecdc0" loc="45:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x101aeca28" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x101aeb130" loc="46:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0x101bc75f0" loc="20:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/csma/sim/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
        <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x101bc79d8" loc="21:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/cc2420/csma/sim/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
          <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="qTail" ref="0x101c328e8" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
      </type-int>
    </variable>
    <variable name="resQ" ref="0x101c320c8" loc="41:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="qHead" ref="0x101c32410" loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
      </type-int>
    </variable>
    <variable name="state" ref="0x101c48c50" loc="71:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
      </type-int>
    </variable>
    <variable name="reqResId" ref="0x101c47760" loc="73:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
      </type-int>
    </variable>
    <variable name="resId" ref="0x101c471d8" loc="72:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
      </type-int>
    </variable>
    <variable name="newCrc" ref="0x101dd0108" loc="59:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
      </type-int>
    </variable>
    <variable name="ifp" ref="0x101dd2120" loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x1011e2498"/>
          <typename><typedef-ref name="FILE" ref="0x1011edb48"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="request" ref="0x101dd27f8" loc="57:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
      </type-int>
    </variable>
    <variable name="filename" ref="0x101dd2d70" loc="58:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-array elements="I:20" size="I:20" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
  </variables>
  <constants>
    <constant cst="I:3" name="ACIE" ref="0x1018fda90" loc="1075:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x1018da6c8" loc="943:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x1018f3420" loc="1132:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x1018c7e18" loc="1058:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x101949a70" loc="76:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x10188f768" loc="140:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x1018943c0" loc="81:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x1018c3020" loc="786:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x101908508" loc="1299:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="LEDS_LED4" ref="0x1016f6718" loc="37:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x101940500" loc="124:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x1019188e8" loc="71:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x1018a16a0" loc="705:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x1018dc0f0" loc="924:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x1018dd020" loc="919:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x1018f46b0" loc="1126:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x1018ef0f0" loc="1154:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x1018ebae0" loc="1182:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x1018faae8" loc="1093:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x1018f7070" loc="1106:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x1018b5e10" loc="876:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x1018b0368" loc="902:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x10167b180" loc="87:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x1018a46a0" loc="687:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x1018b4b90" loc="882:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x1018d76b8" loc="961:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="P_ALL" ref="0x10077f548" loc="80:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x101898df0" loc="763:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x10189d180" loc="730:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x10190c818" loc="1275:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x1018b8e10" loc="858:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x1018dd368" loc="920:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x10191b0f0" loc="55:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x1018a0e10" loc="714:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x101883ae0" loc="269:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x1018bbaa0" loc="839:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="AT45_C_QFLUSH_BUFFER2" ref="0x10170b408" loc="30:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x10188cb20" loc="169:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x1018da020" loc="939:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x10191d480" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x1018f27e0" loc="1138:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x101881b00" loc="283:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x1018d8b68" loc="956:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x1018ed1a8" loc="1166:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x1018e9d00" loc="1194:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x101915770" loc="1222:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x1018b9020" loc="847:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x1018fb9e8" loc="1086:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x1018a5bb8" loc="684:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x10187f790" loc="298:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x101898430" loc="760:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x1018bfe00" loc="817:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x1018d0780" loc="1004:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x101869208" loc="36:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SEEK_BEGINNING" ref="0x1017111a0" loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Storage.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x1018ba4e0" loc="844:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x1019150f0" loc="1218:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x101911ac8" loc="1246:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x1018d81b8" loc="953:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x101943520" loc="100:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x1018b0020" loc="901:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x10188c770" loc="166:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x101920a00" loc="122:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x1018f7d70" loc="1112:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x10189cd60" loc="740:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x1018fa7a0" loc="1092:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x10190e020" loc="1261:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x10167a4b0" loc="95:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x101868420" loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x10188a020" loc="182:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x10188d770" loc="154:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x101405a60" loc="48:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x1018d9780" loc="948:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x1018d0438" loc="1003:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x1018c57a0" loc="779:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x1018bf0f0" loc="811:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x1018beb10" loc="821:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x1018c2430" loc="794:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x10190fb58" loc="1258:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x1018d16c0" loc="997:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x10190bd18" loc="1283:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x1019488a0" loc="80:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x101889020" loc="194:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x1018969f8" loc="773:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x1018a51d8" loc="679:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x10189ed68" loc="727:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x10191be70" loc="59:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x10191a910" loc="62:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x10189e020" loc="721:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x101658d00" loc="78:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x1018cc180" loc="1025:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x10193faf0" loc="136:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x1013fe1d8" loc="45:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x10193fe60" loc="137:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x101882020" loc="272:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x10190d430" loc="1267:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x10190aa40" loc="1289:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x1018cc808" loc="1027:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x1018f0360" loc="1148:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x1018ecd20" loc="1176:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x1018e7770" loc="1204:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x1019131d8" loc="1232:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x1018c20f0" loc="793:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x1018db1c0" loc="933:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x1019147e0" loc="1227:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x1018c41c8" loc="782:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x1018d49e0" loc="980:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x10190f1c8" loc="1255:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x1018ccb68" loc="1030:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x101867020" loc="54:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:214" name="AT45_C_READ_BUFFER2" ref="0x10170e3f0" loc="18:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x1018695a8" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x101883020" loc="264:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x10189f510" loc="718:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="LEDS_LED7" ref="0x1016f5848" loc="40:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x101888760" loc="216:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x1018c1860" loc="802:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x10190b020" loc="1277:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x101909ae0" loc="1296:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x1018a3e18" loc="696:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x1018b74c0" loc="860:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x1018f5b78" loc="1123:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x1018f06c8" loc="1151:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x101886778" loc="238:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x10167b820" loc="92:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x10188f3d0" loc="139:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x1018f8680" loc="1103:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x101890770" loc="134:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x10193f020" loc="130:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x1018f6df0" loc="1117:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x1018f1868" loc="1145:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x1018ec360" loc="1173:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x1018e8d60" loc="1201:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x101940880" loc="125:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x101404a18" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x101881020" loc="278:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x10189c368" loc="735:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x10190de20" loc="1272:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x10190d0f0" loc="1266:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x10190a700" loc="1288:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x1018b96a8" loc="849:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x1018ba828" loc="845:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x1018afe30" loc="912:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x101920630" loc="121:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x1018b5438" loc="873:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x10153e020" loc="49:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x1018cd778" loc="1022:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:83" name="AT45_C_FILL_BUFFER1" ref="0x10170c020" loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x101919790" loc="66:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x10187fb48" loc="301:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x10187eb48" loc="313:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x1018ca7a0" loc="1040:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x1018fb6a0" loc="1085:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x1018bd528" loc="826:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x101942e68" loc="112:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x101886020" loc="232:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x1018d67a0" loc="968:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x1018b2e30" loc="894:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x1018bf788" loc="815:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x101894b10" loc="87:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x1018a19e8" loc="706:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x1018eab98" loc="1187:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x1019166b0" loc="1215:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x1019110f0" loc="1243:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x10188a3c0" loc="185:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x10188b768" loc="176:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x1018d9e10" loc="950:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x1018803d0" loc="287:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x10191c6b0" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x101912360" loc="1237:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x101919420" loc="65:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x101944d98" loc="98:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x10188c3c0" loc="163:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x10189be10" loc="745:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x10188f020" loc="136:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x101883750" loc="268:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x1018c50f0" loc="775:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x1013fe870" loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x10191a598" loc="61:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x1019190a0" loc="64:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x101406178" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x101949700" loc="75:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:210" name="AT45_C_READ_PAGE" ref="0x10170eb98" loc="20:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x1018be180" loc="818:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x1018fcb68" loc="1082:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x1018dad58" loc="945:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x1018f3a80" loc="1134:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x10188e750" loc="146:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x101884020" loc="254:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x1018ee4b0" loc="1162:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x101872688" loc="27:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x101893b10" loc="99:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="LEDS_LED2" ref="0x1016f7b50" loc="35:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x1018f4d40" loc="1128:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x1018ef780" loc="1156:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x1018ea1c0" loc="1184:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x101917b70" loc="1212:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x1018af7a0" loc="910:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x1018a2b50" loc="700:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x1018c94f8" loc="1044:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x1018d0ad0" loc="1005:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x1018f76d0" loc="1108:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x1018d24f0" loc="992:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x101896020" loc="770:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x1018a4d20" loc="689:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x1018cd430" loc="1021:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x1018b3370" loc="884:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x1018974c0" loc="765:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x1019411e0" loc="113:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AT45_DONT_ERASE" ref="0x1017095f8" loc="40:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x1018b1510" loc="896:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x1018ba180" loc="841:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x1018c8a20" loc="1052:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x1014065f0" loc="45:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x1018d79f8" loc="962:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:215" name="AT45_C_REQ_STATUS" ref="0x10170a020" loc="33:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x101869ca0" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x1018db870" loc="937:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x1018ed808" loc="1168:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x1018e83a0" loc="1196:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x101915dd0" loc="1224:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x101910800" loc="1252:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x1018fa0f0" loc="1088:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x1018a4360" loc="686:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x1018d3430" loc="985:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x101919e70" loc="68:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x10187f3d8" loc="295:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x101404290" loc="50:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x1018933d0" loc="93:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x1018fe6b8" loc="1067:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="AT45_PAGE_SIZE_LOG2" ref="0x101710090" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45db_chip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x101910180" loc="1248:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x1018b9d28" loc="851:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x1018ae1b8" loc="913:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x1018c6868" loc="1063:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x1018b1bb8" loc="900:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x1018893c0" loc="197:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x1018f6430" loc="1114:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x1018f2e80" loc="1142:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x101899d48" loc="756:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x10189c6b0" loc="736:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x10190e6a0" loc="1263:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x101899370" loc="753:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x1018dcad0" loc="929:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x1018996b8" loc="754:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x1018b6a28" loc="870:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x1018863d8" loc="235:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x1018d2b80" loc="994:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x1018b7b50" loc="864:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x101888020" loc="210:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x1018d1a10" loc="998:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x1018c7438" loc="1055:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x1018fd0f0" loc="1072:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x1018c4ba8" loc="785:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x1018c06c8" loc="808:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x1018be7e0" loc="820:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x10190a3a0" loc="1285:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x10187e020" loc="304:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x10188d3b8" loc="151:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x101880768" loc="288:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x1018d84e8" loc="954:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x1018fb020" loc="1083:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x1018f9808" loc="1097:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x101949390" loc="74:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x101943878" loc="101:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x1018b2440" loc="891:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x10189e6b0" loc="723:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="AT45_C_WRITE_MEM_BUFFER1" ref="0x10170d808" loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x1018c9b80" loc="1046:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x101881768" loc="282:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x1018ad3c0" loc="319:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x1019090f0" loc="1291:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x1012573b0" loc="68:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x1013fe520" loc="46:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x101939070" loc="55:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x1018eb430" loc="1178:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x1018e7df0" loc="1206:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x101913858" loc="1234:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x10193a8a8" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x1018c1bb0" loc="803:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x10189a180" loc="746:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x1018a3438" loc="691:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x1018b0d30" loc="905:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="AT45_C_FLUSH_BUFFER2" ref="0x10170cbb0" loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x1018fae28" loc="1094:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x101920e08" loc="123:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x1018cb9d8" loc="1034:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x1018f30f0" loc="1131:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x1018c4860" loc="784:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x1012a0070" loc="40:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="LEDS_LED5" ref="0x1016f6cb0" loc="38:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x101872dc8" loc="33:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x1019081c0" loc="1298:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x1018a24c0" loc="698:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x1018a1360" loc="704:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x1018ddd30" loc="923:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x1018f4368" loc="1125:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x101885760" loc="250:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x1018f0d58" loc="1153:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x1018eb798" loc="1181:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x1018d4020" loc="977:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:96" name="AT45_C_COMPARE_BUFFER1" ref="0x10170b7f8" loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x1018d54e8" loc="974:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x1018f8ce0" loc="1105:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x101919b00" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x1018b4840" loc="881:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x1018853c0" loc="247:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x101898ab0" loc="762:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x1018823b8" loc="273:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x101880020" loc="284:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x10189db58" loc="733:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x10190c4d0" loc="1274:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x1018b3d50" loc="887:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x10191b438" loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x1018a0ad0" loc="713:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x1018b5ac8" loc="875:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x101405020" loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x1018f24b0" loc="1137:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x1018eee40" loc="1165:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x1018d8828" loc="955:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x1018e99d0" loc="1193:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x101915440" loc="1221:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x10187e3d8" loc="307:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x1018bab70" loc="846:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x10188b020" loc="172:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x1018c2e20" loc="799:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x1018bdba8" loc="828:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x1018bcd38" loc="835:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x101899020" loc="752:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x1018cae30" loc="1042:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x1018980f0" loc="759:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x1018cb698" loc="1033:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x1018a00f0" loc="708:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x1018923c0" loc="105:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x1018d1020" loc="995:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x101916d40" loc="1217:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x101911780" loc="1245:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x1018a6b10" loc="677:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x1018a5858" loc="681:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x10188eb00" loc="149:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x10191c020" loc="50:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x1019446f0" loc="96:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x1018f7a30" loc="1111:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x10193ac28" loc="53:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x10189b780" loc="743:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x1018fa458" loc="1091:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x10191a218" loc="60:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x1018c61c8" loc="1061:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x101942020" loc="103:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x101949020" loc="73:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x101884770" loc="258:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x1018d9438" loc="947:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x1018f2180" loc="1136:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x1018d00f0" loc="1002:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x10188fb00" loc="141:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x1018eeb10" loc="1164:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x1018e96a0" loc="1192:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x10190f828" loc="1257:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x1018c36c0" loc="790:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x10190b9e8" loc="1282:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x1018d1370" loc="996:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="AT45_C_WRITE_BUFFER1" ref="0x10170d020" loc="21:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x1018966b0" loc="772:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x1018953c0" loc="69:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x10189fba0" loc="720:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x1018cf848" loc="1011:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x1018a5518" loc="680:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x10188c020" loc="160:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x10191f238" loc="124:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x1018f0020" loc="1147:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x1018ec9e0" loc="1175:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x1018e7430" loc="1203:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x101914e70" loc="1231:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x1018bf438" loc="812:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x1018db508" loc="934:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x1018e8a00" loc="1198:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x1019144b0" loc="1226:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x1018c4518" loc="783:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x1018d46a0" loc="979:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x101910e60" loc="1254:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x1018913d0" loc="119:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x1018c6bb0" loc="1064:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x1018d4d48" loc="983:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x10193a108" loc="50:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x1018b8ac8" loc="857:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x1018a0450" loc="711:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x1018cd0f0" loc="1020:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x1018c0380" loc="807:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x10188a770" loc="188:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x10153e6d8" loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x101892b10" loc="111:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x1018a3ad8" loc="695:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x1018b7180" loc="859:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x1018ae838" loc="915:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x1018aeba0" loc="918:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x1018fc4c8" loc="1078:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x1018f5830" loc="1122:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x101885b10" loc="253:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x10191ac88" loc="63:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x101887768" loc="226:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x1018fd750" loc="1074:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x1018cfb88" loc="1012:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x1018f8350" loc="1102:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x10167a070" loc="94:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x10193a500" loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x1018f6ab0" loc="1116:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x1018f1528" loc="1144:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x1018ec020" loc="1172:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x10189c020" loc="734:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x10190dad8" loc="1271:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x101944a48" loc="97:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x10190ed20" loc="1265:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x10189f1c8" loc="717:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x1018dc450" loc="927:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x1018b9368" loc="848:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x1018afae8" loc="911:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x1018b50f0" loc="872:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ELAST" ref="0x10153ed90" loc="53:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x1018ce680" loc="1015:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x1018bee58" loc="822:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x101949de0" loc="77:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x1018fddd0" loc="1076:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:85" name="AT45_C_FILL_BUFFER2" ref="0x10170c3f0" loc="26:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x101867b48" loc="63:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x1018ad778" loc="322:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x1018d7370" loc="960:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x1018d7d28" loc="963:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x1018d5828" loc="975:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x1018fb360" loc="1084:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x101941990" loc="118:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x1018c8360" loc="1048:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="P_PID" ref="0x10077f7f8" loc="81:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x101887b18" loc="229:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x1018b2ae0" loc="893:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x1018bd868" loc="827:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x101894020" loc="78:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LEDS_LED0" ref="0x1016f7020" loc="33:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x1018efe10" loc="1158:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x1018c3380" loc="789:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x1018bb430" loc="837:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x1018ea850" loc="1186:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x101916368" loc="1214:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x1018d3e00" loc="988:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x101912d50" loc="1242:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="VOLUME_BLOCKTEST" ref="0x101296680" loc="5:simbuild/micaz/StorageVolumes.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x10189a830" loc="750:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x1018d9ac8" loc="949:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x10191c9f8" loc="53:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x1018d60f0" loc="964:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="AT45_MAX_PAGES" ref="0x1017118c8" loc="37:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45db_chip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x1018d6ae0" loc="969:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x1019174c0" loc="1208:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x101912020" loc="1236:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x1018c11c8" loc="800:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x10189bac8" loc="744:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x1018ca0f0" loc="1036:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x101886b18" loc="241:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x1018f94c8" loc="1096:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x1018daa10" loc="944:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x1018fea00" loc="1068:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x1018f3750" loc="1133:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x1018ee180" loc="1161:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="LEDS_LED3" ref="0x1016f6180" loc="36:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x101893020" loc="90:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x1018883c0" loc="213:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x1018caae8" loc="1041:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x1018f49f8" loc="1127:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x1018ef438" loc="1155:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x1018ebe28" loc="1183:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x1018a2808" loc="699:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x101917828" loc="1211:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x1018fe370" loc="1066:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x1018f73a0" loc="1107:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x1018b4180" loc="877:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x1018b06b0" loc="903:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x101897b68" loc="769:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x1018a49e0" loc="688:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x10193bc68" loc="49:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x1019431c8" loc="99:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x1018b66c0" loc="867:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x1018b3020" loc="883:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x101897180" loc="764:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x1018813b8" loc="279:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x10189d4c8" loc="731:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x10190cb60" loc="1276:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x101909798" loc="1295:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x1019423b8" loc="107:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x1018b8438" loc="855:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x1018dd6b0" loc="921:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x1019481e8" loc="78:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x10191cd40" loc="54:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x1018bbdd0" loc="840:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x10188e3b8" loc="145:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x1018a6488" loc="675:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="AT45_C_QFLUSH_BUFFER1" ref="0x10170b020" loc="29:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x101891020" loc="116:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x10167c930" loc="85:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:232" name="AT45_C_READ_CONTINUOUS" ref="0x10170e7e0" loc="19:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x101869920" loc="41:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x1018dbbb8" loc="938:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x1018cecf0" loc="1017:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x1018ed4d8" loc="1167:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x1018d7020" loc="957:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x1018e8070" loc="1195:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x101915aa0" loc="1223:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x1019104d0" loc="1251:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x1018fbd30" loc="1087:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x1018a4020" loc="685:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x1018c5e38" loc="781:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x1018bc368" loc="830:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x1018d30f0" loc="984:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x1018c9838" loc="1045:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x10191f618" loc="125:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x1018bc020" loc="829:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x10187f020" loc="292:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x1018c7ad0" loc="1057:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x101894770" loc="84:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x101911e10" loc="1247:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x1018b99e8" loc="850:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x101899a00" loc="755:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x1018c8d70" loc="1053:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x1018fc828" loc="1081:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x101868b68" loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x1018f60f0" loc="1113:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0x10165ed60" loc="27:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x1018f2b40" loc="1141:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x10189b0f0" loc="741:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x10190e360" loc="1262:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x101880b00" loc="289:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x10167bc18" loc="93:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x10188db28" loc="157:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x101889780" loc="202:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x1018d2838" loc="993:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x1018843b8" loc="255:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x101941d38" loc="119:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x10167c550" loc="84:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x101888b10" loc="219:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x1018c0a10" loc="809:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x1018be4b0" loc="819:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x10190a070" loc="1284:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x1018c2ab0" loc="796:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x1018673d8" loc="57:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x101896d40" loc="774:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x1012dde58" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x1018b20f0" loc="890:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x101895b00" loc="75:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x10189e368" loc="722:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x10191ec88" loc="38:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x1018ce350" loc="1014:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x1018cbd18" loc="1035:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x101918208" loc="69:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x101404670" loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="AT45_C_WRITE_MEM_BUFFER2" ref="0x10170dc10" loc="24:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x101882b00" loc="277:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x1018ce9b0" loc="1016:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x10191e8a8" loc="37:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x10190d770" loc="1268:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x10190ad80" loc="1290:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x10191baf8" loc="58:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x1018ca438" loc="1037:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x1018bfab8" loc="816:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x1018fed50" loc="1071:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x1018eb0f0" loc="1177:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x1018e7ab0" loc="1205:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x101913518" loc="1233:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x1018c3d48" loc="792:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x1018dce38" loc="932:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x101914b10" loc="1228:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x10190f4f8" loc="1256:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x10188b3b8" loc="173:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x1018d3770" loc="986:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x10190b6b8" loc="1281:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x101890b00" loc="135:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x10153ea28" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x1018b09f0" loc="904:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="SIM_LOG_OUTPUT_COUNT" ref="0x10129de40" loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x1018d6e28" loc="970:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x101658948" loc="77:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x1018d4360" loc="978:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:212" name="AT45_C_READ_BUFFER1" ref="0x10170e020" loc="17:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x1018c3a00" loc="791:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x1018cdde8" loc="1024:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x101889b40" loc="207:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x1018c5ae8" loc="780:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="LEDS_LED6" ref="0x1016f5290" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x10190b368" loc="1278:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x101909e28" loc="1297:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x1018a2180" loc="697:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x1018a1020" loc="703:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="AT45_C_ERASE_PAGE" ref="0x10170a3e0" loc="34:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x1013febc0" loc="48:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x1018b7800" loc="861:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x1018af458" loc="909:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x1018dd9f0" loc="922:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x10188e020" loc="144:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x1018f4020" loc="1124:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x1018f0a10" loc="1152:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="AT45_C_COMPARE_BUFFER2" ref="0x10170bbe8" loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x1018f89b0" loc="1104:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x1018f5180" loc="1118:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x1018f1ba8" loc="1146:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x1018b44f0" loc="880:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x101898770" loc="761:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x1018ec6a0" loc="1174:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x1018e70f0" loc="1202:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x10189d810" loc="732:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x10190c188" loc="1273:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x1018a6e58" loc="678:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x1018b3a08" loc="886:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x10191b780" loc="57:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x1018a0790" loc="712:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x1018b5780" loc="874:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x1018d6440" loc="965:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x101884b20" loc="261:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x1018903d0" loc="131:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x1018cb368" loc="1032:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x1018ad020" loc="316:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x1018bb770" loc="838:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x1018d51b8" loc="973:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x1018b11c8" loc="895:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x1018cdaa8" loc="1023:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x101893770" loc="96:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x1018a1d30" loc="707:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x1018e9020" loc="1188:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x1018c2770" loc="795:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x1018b80f0" loc="854:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x1019169f8" loc="1216:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x101911438" loc="1244:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x10191e180" loc="35:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x1018ce020" loc="1013:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x1018fd420" loc="1073:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x10191d870" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x101406ac0" loc="46:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x1018d5b68" loc="976:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x101948558" loc="79:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x101890020" loc="128:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x10191c368" loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x101403290" loc="53:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:264" name="AT45_PAGE_SIZE" ref="0x101711c68" loc="38:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45db_chip.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x1019126a0" loc="1238:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x10189b438" loc="742:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x1018c86d0" loc="1051:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x1018c5438" loc="776:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x1018bc6a8" loc="831:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x1018c8020" loc="1047:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x10191e560" loc="36:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x1018d90f0" loc="946:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x1018f3db0" loc="1135:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x1018ee7e0" loc="1163:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x1018e9370" loc="1191:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x10167cd20" loc="86:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x1018b6370" loc="866:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x101868070" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x1018c0d50" loc="810:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x1018d0e20" loc="1006:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x1018c7788" loc="1056:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x10188d020" loc="150:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x1018d1d80" loc="1001:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="AT45_C_WRITE_BUFFER2" ref="0x10170d400" loc="22:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x101896368" loc="771:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x1018a30f0" loc="690:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x1018cb020" loc="1031:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x101887020" loc="222:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x1018b36c0" loc="885:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x1012dd478" loc="41:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x1018bd1d8" loc="823:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x1012ddb00" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x10189f858" loc="719:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x101897800" loc="766:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x101882750" loc="274:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AT45_PREVIOUSLY_ERASED" ref="0x101709970" loc="41:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x1018b1858" loc="897:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AT45_ERASE" ref="0x1017092e8" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/At45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x10193f378" loc="131:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x1018c6518" loc="1062:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x10165e688" loc="15:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x101918c58" loc="72:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x1012dd7b8" loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x1018e86d0" loc="1197:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x1018c0020" loc="804:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x101914180" loc="1225:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x101910b30" loc="1253:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x1018687b8" loc="48:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x1018c70f0" loc="1054:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x101891770" loc="122:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x1018b8780" loc="856:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x10153e388" loc="50:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x101918578" loc="70:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x101948bd8" loc="81:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x1018fc180" loc="1077:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x101892020" loc="102:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x1018a3798" loc="694:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x1018ae4f8" loc="914:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x1018f54e8" loc="1121:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x101885020" loc="244:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x10188ab20" loc="191:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x1018f8020" loc="1101:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x10188bb08" loc="179:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x1018833c0" loc="267:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x101943bd0" loc="102:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x1018f6770" loc="1115:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x1018f11e8" loc="1143:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x1018edb68" loc="1171:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x10189c9f8" loc="737:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x10190e9e0" loc="1264:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x1018dc790" loc="928:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x10165d1a0" loc="28:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x1018b6d70" loc="871:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x1018bc9f8" loc="834:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x1018cf1c8" loc="1007:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x1018fe020" loc="1065:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x101867790" loc="60:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x10187e790" loc="310:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x101895760" loc="72:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x1018cf518" loc="1010:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x10191f9d8" loc="126:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x1018f9b48" loc="1098:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x1018c91b8" loc="1043:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x1018b2790" loc="892:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x10189e9f8" loc="724:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x101872a28" loc="30:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x101892760" loc="108:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="LEDS_LED1" ref="0x1016f75b8" loc="34:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Leds.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x1018b6020" loc="865:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x1018efac8" loc="1157:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x1018bb0f0" loc="836:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x1018ea508" loc="1185:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x101916020" loc="1213:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x101912a08" loc="1241:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x1018d3ab8" loc="987:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x1018a67c8" loc="676:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x101895020" loc="66:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x101909430" loc="1292:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x10189ab78" loc="751:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x1012576d0" loc="68:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x101917180" loc="1207:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x101405df8" loc="49:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="P_PGID" ref="0x10077fad0" loc="82:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x101913b98" loc="1235:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x101891b10" loc="125:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x1018873b8" loc="223:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x1018da380" loc="942:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x1018c1518" loc="801:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x10189a4c8" loc="747:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x1018cc4c0" loc="1026:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x1018af0f0" loc="906:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="AT45_C_FLUSH_BUFFER1" ref="0x10170c7d0" loc="27:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/HplAt45db.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x1018d2180" loc="989:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x1018f9188" loc="1095:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="A_READ" ref="0x101793a48" loc="189:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="NWRITES" ref="0x10173fce8" loc="29:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:262144" name="SIZE" ref="0x10173f7b8" loc="28:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="A_WRITE" ref="0x101792020" loc="189:RandRWC.nc">
      <component-ref qname="RandRWC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="RESOURCE_ID" ref="0x1017ab020" loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="BLOCK_ID" ref="0x1017ac678" loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="R_SYNC" ref="0x1017d5020" loc="80:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="R_READ" ref="0x1017d52d8" loc="81:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="R_WRITE" ref="0x1017dba28" loc="78:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="R_CRC" ref="0x1017d5588" loc="82:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_CLIENT" ref="0x1017d3020" loc="87:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="R_ERASE" ref="0x1017dbce8" loc="79:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="N" ref="0x1017d4c10" loc="86:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="R_IDLE" ref="0x1017db768" loc="77:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x1016c0d10" loc="48:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="NUM_TASKS" ref="0x1016c09b8" loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_ENTRY" ref="0x101c33b48" loc="39:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="FcfsResourceQueueC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="grantedTask" ref="0x101c52438" loc="75:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RES_CONTROLLED" ref="0x101c49100" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="default_owner_id" ref="0x101c48230" loc="68:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_RES" ref="0x101c48888" loc="69:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RES_GRANTING" ref="0x101c493d8" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="RES_BUSY" ref="0x101c49988" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="RES_IMM_GRANTING" ref="0x101c496d8" loc="67:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="R_FLUSH" ref="0x101dd32e0" loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="taskSuccess" ref="0x101cb5438" loc="112:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="taskFail" ref="0x101d746d0" loc="108:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="R_SYNC" ref="0x101dd4c40" loc="49:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="R_READ" ref="0x101d91e00" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="R_READCRC" ref="0x101dd4150" loc="45:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="R_WRITE" ref="0x101dd4410" loc="46:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="BROKEN" ref="0x101dd3898" loc="53:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IDLE" ref="0x101d91b48" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="R_COPY" ref="0x101dd4988" loc="48:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="R_SYNCALL" ref="0x101dd3020" loc="50:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="taskCrcSuccess" ref="0x101dfc858" loc="104:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="R_ERASE" ref="0x101dd46d0" loc="47:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="R_FLUSHALL" ref="0x101dd35c0" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="startDone" ref="0x101ed06d0" loc="59:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="stopDone" ref="0x101e67438" loc="60:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="__darwin_pthread_attr_t" ref="0x10053daa0" loc="113:/usr/include/sys/_types.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x10052d9a0"/>
        <typename><typedef-ref name="__darwin_pthread_attr_t" ref="0x10053daa0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="intptr_t" ref="0x100550398" loc="84:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intptr_t" ref="0x100550398"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x101674660" loc="123:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x101675a78"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x101674660"/></typename>
      </type-tag>
    </typedef>
    <typedef name="rune_t" ref="0x10100c460" loc="86:/usr/include/stdlib.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="rune_t" ref="0x10100c460"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_blkcnt_t" ref="0x100536910" loc="94:/usr/include/sys/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_blkcnt_t" ref="0x100536910"/></typename>
      </type-int>
    </typedef>
    <typedef name="wchar_t" ref="0x10050e5f0" loc="326:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x10050e5f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_size_t" ref="0x100528198" loc="90:/usr/include/i386/_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_size_t" ref="0x100528198"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x101944020" loc="90:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x101946850"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x101944020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_ino_t" ref="0x10053a9d0" loc="103:/usr/include/sys/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ino_t" ref="0x10053a9d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x10165b748" loc="17:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x10165b020"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x10165b748"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int64_t" ref="0x1005234c8" loc="46:/usr/include/i386/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x1005234c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x100522610" loc="42:/usr/include/i386/_types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x100522610"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0x101675738" loc="118:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x101676360"/>
        <typename><typedef-ref name="serial_header_t" ref="0x101675738"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0x101cd04b8" loc="29:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x101cd0020"/>
        <typename><typedef-ref name="TMilli" ref="0x101cd04b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_RuneEntry" ref="0x101192e18" loc="86:/usr/include/runetype.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref ref="0x1011925f0"/>
        <typename><typedef-ref name="_RuneEntry" ref="0x101192e18"/></typename>
      </type-tag>
    </typedef>
    <typedef name="user_long_t" ref="0x10105bbd8" loc="117:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_long_t" ref="0x10105bbd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0x1013cf498" loc="186:/usr/include/sys/_structs.h">
      <documentation loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_mote.h">
        <short>&#10; Further edited by for multi-channel TOSSIM, each channel uses different noise traces&#10;&#10; </short>
        <long>&#10; Further edited by for multi-channel TOSSIM, each channel uses different noise traces&#10;&#10; @author Bo Li of wustl&#10; @data Mar 19, 2012&#10;</long>
      </documentation>
      <type-tag size="I:128" alignment="I:4"><struct-ref name="fd_set" ref="0x1013b6560"/>
        <typename><typedef-ref name="fd_set" ref="0x1013cf498"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x10126b020" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_tossim.h">
      <documentation loc="24:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x10126b020"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x1010a0b10" loc="49:/usr/include/architecture/i386/math.h">
      <documentation loc="39:/usr/include/architecture/i386/math.h">
        <short>****************************************************************************&#10;       Floating point data types                                             *&#10;*****************************************************************************</short>
      </documentation>
      <type-float cname="float" size="I:4" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x1010a0b10"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x1010683f8" loc="263:/usr/include/stdlib.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="mode_t" ref="0x1010683f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcontext_t" ref="0x1007b7e08" loc="91:/usr/include/i386/_structs.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:712" alignment="I:8"><struct-ref name="__darwin_mcontext64" ref="0x1007b87a8"/></type-tag>
        <typename><typedef-ref name="mcontext_t" ref="0x1007b7e08"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="int_least32_t" ref="0x10054aba0" loc="61:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x10054aba0"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_size_t" ref="0x10105b458" loc="115:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_size_t" ref="0x10105b458"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x100504730"  loc="NONE">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x100504510"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="storage_len_t" ref="0x1017126f8" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Storage.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="storage_len_t" ref="0x1017126f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint32_t" ref="0x100523130" loc="45:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x100523130"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0x101ccf670" loc="31:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x101ccf1d8"/>
        <typename><typedef-ref name="TMicro" ref="0x101ccf670"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_nl_item" ref="0x100545ab8" loc="39:/usr/include/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_nl_item" ref="0x100545ab8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wchar_t" ref="0x100528998" loc="102:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wchar_t" ref="0x100528998"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0x1013c53a8" loc="77:/usr/include/time.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="clock_t" ref="0x1013c53a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="heap_t" ref="0x101333cb8" loc="54:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/heap.h">
      <documentation loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x1013330b8"/>
        <typename><typedef-ref name="heap_t" ref="0x101333cb8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="user_ulong_t" ref="0x10106b020" loc="118:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_ulong_t" ref="0x10106b020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ssize_t" ref="0x10052ad40" loc="117:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ssize_t" ref="0x10052ad40"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x100714e38" loc="446:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x100714e38"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x10129d1f8" loc="53:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="sim_log_channel" ref="0x10129f150"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x10129d1f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_group_t" ref="0x101660b50" loc="11:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x101660b50"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least8_t" ref="0x10054b3f0" loc="63:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x10054b3f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x10054fba8" loc="76:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast32_t" ref="0x10054fba8"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0x10054b020" loc="62:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x10054b020"/></typename>
      </type-int>
    </typedef>
    <typedef name="at45page_t" ref="0x101710450" loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45db_chip.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="at45page_t" ref="0x101710450"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mach_port_t" ref="0x10053b4f0" loc="108:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_mach_port_t" ref="0x10053b4f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x101274d70" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x1012748d8"/>
        <typename><typedef-ref name="sim_event_t" ref="0x101274d70"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x101694ca0" loc="56:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
      <documentation loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision$&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x101694ca0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uid_t" ref="0x100543848" loc="133:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_uid_t" ref="0x100543848"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_clock_t" ref="0x10052a578" loc="115:/usr/include/i386/_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_clock_t" ref="0x10052a578"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x10054a400" loc="59:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x10054a400"/></typename>
      </type-int>
    </typedef>
    <typedef name="FILE" ref="0x1011edb48" loc="163:/usr/include/stdio.h">
      <type-tag size="I:152" alignment="I:8"><struct-ref name="__sFILE" ref="0x1011e2498"/>
        <typename><typedef-ref name="FILE" ref="0x1011edb48"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x10193b5a0" loc="152:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x10193b5a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_gid_t" ref="0x100538d40" loc="99:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_gid_t" ref="0x100538d40"/></typename>
      </type-int>
    </typedef>
    <typedef name="radio_stats_t" ref="0x101676020" loc="110:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0x10167a7d8"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x101676020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gid_t" ref="0x101cccb50" loc="83:/usr/include/unistd.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0x101cccb50"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_addr_t" ref="0x10105b088" loc="114:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_addr_t" ref="0x10105b088"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_packet_t" ref="0x10164d0c8" loc="51:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_packet.h">
      <documentation loc="24:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x10164fc88"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x10164d0c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x100546688" loc="20:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x100546688"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x1012a0da0" loc="46:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x1012a03b8"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x1012a0da0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x10193ddd0" loc="149:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x10193d348"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x10193ddd0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x1013ca508" loc="86:/usr/include/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="suseconds_t" ref="0x1013ca508"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x1007c8908" loc="168:/usr/include/sys/signal.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="sigset_t" ref="0x1007c8908"/></typename>
      </type-int>
    </typedef>
    <typedef name="resource_client_id_t" ref="0x101c398d0" loc="33:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Resource.h">
      <documentation loc="23:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision$&#10; @date $Date$&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="resource_client_id_t" ref="0x101c398d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="T32khz" ref="0x101cd0d60" loc="30:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x101cd08c8"/>
        <typename><typedef-ref name="T32khz" ref="0x101cd0d60"/></typename>
      </type-tag>
    </typedef>
    <typedef name="tossim_header_t" ref="0x10165cbd0" loc="13:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:8" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x10165d560"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x10165cbd0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x10050bde0" loc="152:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stddef.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ptrdiff_t" ref="0x10050bde0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x100548b68" loc="50:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x100548b68"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fp_control_t" ref="0x10078a0c8" loc="114:/usr/include/mach/i386/_structs.h">
      <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_control" ref="0x1007825a8"/>
        <typename><typedef-ref name="__darwin_fp_control_t" ref="0x10078a0c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x10071ec88" loc="448:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x10071ec88"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x100711020" loc="435:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x100711020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x100550730" loc="89:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintptr_t" ref="0x100550730"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_rwlockattr_t" ref="0x100541690" loc="128:/usr/include/sys/_types.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="_opaque_pthread_rwlockattr_t" ref="0x100534d10"/>
        <typename><typedef-ref name="__darwin_pthread_rwlockattr_t" ref="0x100541690"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x100550020" loc="77:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x100550020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uuid_t" ref="0x101ccb3f8" loc="133:/usr/include/unistd.h">
      <type-array elements="I:16" size="I:16" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="uuid_t" ref="0x101ccb3f8"/></typename>
      </type-array>
    </typedef>
    <typedef name="__uint16_t" ref="0x1005229b0" loc="43:/usr/include/i386/_types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x1005229b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x101923688" loc="114:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x101923688"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x10054d7b8" loc="71:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_fast16_t" ref="0x10054d7b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x1011e33f0" loc="87:/usr/include/stdio.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fpos_t" ref="0x1011e33f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="div_t" ref="0x10100a020" loc="100:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x10100c9e0"/>
        <typename><typedef-ref name="div_t" ref="0x10100a020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x1014a5328" loc="6:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x1014a7998"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x1014a5328"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x10050e228" loc="214:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stddef.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="size_t" ref="0x10050e228"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_suseconds_t" ref="0x100543450" loc="132:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_suseconds_t" ref="0x100543450"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0x1005222b0" loc="41:/usr/include/i386/_types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x1005222b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x101662a98" loc="6:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/AM.h">
      <documentation loc="25:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision$&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x101662a98"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ct_rune_t" ref="0x100525460" loc="70:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_ct_rune_t" ref="0x100525460"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fsfilcnt_t" ref="0x100538948" loc="98:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_fsfilcnt_t" ref="0x100538948"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x101671020" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/platform_message.h">
      <type-tag size="I:8" alignment="I:1"><union-ref name="message_header" ref="0x101672540"/>
        <typename><typedef-ref name="message_header_t" ref="0x101671020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x101496808" loc="53:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_gain.h">
        <short>&#10; Further edited by for multi-channel TOSSIM, each channel uses different noise traces&#10;&#10; </short>
        <long>&#10; Further edited by for multi-channel TOSSIM, each channel uses different noise traces&#10;&#10; @author Bo Li of wustl&#10; @data Mar 19, 2012&#10;</long>
      </documentation>
      <type-tag size="I:32" alignment="I:8"><struct-ref name="gain_entry" ref="0x101497848"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x101496808"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x10165e020" loc="12:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x10165e020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x10070a1c8" loc="433:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x10070a1c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x10193b1d0" loc="151:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x10193b1d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x10054b7d8" loc="64:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x10054b7d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint8_t" ref="0x100548448" loc="40:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x100548448"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_socklen_t" ref="0x10052a998" loc="116:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_socklen_t" ref="0x10052a998"/></typename>
      </type-int>
    </typedef>
    <typedef name="time_t" ref="0x1013ca0c8" loc="81:/usr/include/sys/time.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="time_t" ref="0x1013ca0c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_blksize_t" ref="0x100536d28" loc="95:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_blksize_t" ref="0x100536d28"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x100718b98" loc="441:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x100718b98"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x101009780" loc="111:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x1010091b8"/>
        <typename><typedef-ref name="lldiv_t" ref="0x101009780"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x1007c8500" loc="163:/usr/include/sys/signal.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_attr_t" ref="0x10052d9a0"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x1007c8500"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pid_t" ref="0x10077c280" loc="90:/usr/include/sys/wait.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x10077c280"/></typename>
      </type-int>
    </typedef>
    <typedef name="storage_addr_t" ref="0x101712318" loc="42:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Storage.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="storage_addr_t" ref="0x101712318"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0x1005238a0" loc="47:/usr/include/i386/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x1005238a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x100717970" loc="443:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x100717970"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fp_status_t" ref="0x100792ba0" loc="164:/usr/include/mach/i386/_structs.h">
      <type-tag size="I:2" alignment="I:2"><struct-ref name="__darwin_fp_status" ref="0x10078a440"/>
        <typename><typedef-ref name="__darwin_fp_status_t" ref="0x100792ba0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_RuneRange" ref="0x101191ad8" loc="91:/usr/include/runetype.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x101191510"/>
        <typename><typedef-ref name="_RuneRange" ref="0x101191ad8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="va_list" ref="0x1011e5b88" loc="70:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x100504510"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x1011e5b88"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="int_fast8_t" ref="0x10054d3f0" loc="70:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x10054d3f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_cond_t" ref="0x10053e020" loc="115:/usr/include/sys/_types.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="_opaque_pthread_cond_t" ref="0x10052e710"/>
        <typename><typedef-ref name="__darwin_pthread_cond_t" ref="0x10053e020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x101659e28" loc="29:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x10165ba98"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x101659e28"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_off_t" ref="0x10053bce0" loc="110:/usr/include/sys/_types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_off_t" ref="0x10053bce0"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_id_t" ref="0x1016607a0" loc="10:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x1016607a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0x100550ae0" loc="97:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x100550ae0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mode_t" ref="0x10053b8f0" loc="109:/usr/include/sys/_types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__darwin_mode_t" ref="0x10053b8f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ino64_t" ref="0x10053a598" loc="101:/usr/include/sys/_types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ino64_t" ref="0x10053a598"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x1016721f8" loc="127:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x1016749b0"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x1016721f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint16_t" ref="0x1005487d8" loc="45:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x1005487d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int8_t" ref="0x10105fd38" loc="80:/usr/include/i386/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x10105fd38"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x101660020" loc="7:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x101660020"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_metadata_t" ref="0x10166f7b0" loc="52:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/platform_message.h">
      <type-tag size="I:6" alignment="I:1"><union-ref name="message_metadata" ref="0x10166f020"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x10166f7b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_time_t" ref="0x10052b160" loc="118:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_time_t" ref="0x10052b160"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x100711db0" loc="437:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x100711db0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uuid_t" ref="0x1005451d8" loc="135:/usr/include/sys/_types.h">
      <type-array elements="I:16" size="I:16" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__darwin_uuid_t" ref="0x1005451d8"/></typename>
      </type-array>
    </typedef>
    <typedef name="__darwin_dev_t" ref="0x100538158" loc="96:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_dev_t" ref="0x100538158"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0x101295cb0" loc="10:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/hashtable.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x101295818"/>
        <typename><typedef-ref name="hashtable_t" ref="0x101295cb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0x101068020" loc="258:/usr/include/stdlib.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="dev_t" ref="0x101068020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_rune_t" ref="0x100528dd8" loc="107:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_rune_t" ref="0x100528dd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x10105d4c0" loc="90:/usr/include/i386/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x10105d4c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x10054f3e8" loc="74:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x10054f3e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="idtype_t" ref="0x10077fe58" loc="83:/usr/include/sys/wait.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x10077f2b0"/>
        <typename><typedef-ref name="idtype_t" ref="0x10077fe58"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_RuneCharClass" ref="0x10118f8a8" loc="96:/usr/include/runetype.h">
      <type-tag size="I:20" alignment="I:4"><struct-ref ref="0x10118f2e0"/>
        <typename><typedef-ref name="_RuneCharClass" ref="0x10118f8a8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_int16_t" ref="0x10070caf8" loc="432:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x10070caf8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pid_t" ref="0x10053d158" loc="111:/usr/include/sys/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_pid_t" ref="0x10053d158"/></typename>
      </type-int>
    </typedef>
    <typedef name="ucontext_t" ref="0x1007c8088" loc="227:/usr/include/sys/_structs.h">
      <type-tag size="I:56" alignment="I:8"><struct-ref name="__darwin_ucontext" ref="0x1007bf020"/>
        <typename><typedef-ref name="ucontext_t" ref="0x1007c8088"/></typename>
      </type-tag>
    </typedef>
    <typedef name="register_t" ref="0x10105dc40" loc="98:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="register_t" ref="0x10105dc40"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_key_t" ref="0x10053e9d0" loc="118:/usr/include/sys/_types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_pthread_key_t" ref="0x10053e9d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="rlim_t" ref="0x1007e0020" loc="88:/usr/include/sys/resource.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="rlim_t" ref="0x1007e0020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_natural_t" ref="0x100525088" loc="50:/usr/include/i386/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_natural_t" ref="0x100525088"/></typename>
      </type-int>
    </typedef>
    <typedef name="ssize_t" ref="0x100571228" loc="70:/usr/include/string.h">
      <documentation loc="24:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/tos.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ssize_t" ref="0x100571228"/></typename>
      </type-int>
    </typedef>
    <typedef name="sig_atomic_t" ref="0x10077cb78" loc="39:/usr/include/i386/signal.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="sig_atomic_t" ref="0x10077cb78"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0x100546d18" loc="30:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x100546d18"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mbstate_t" ref="0x100526750" loc="81:/usr/include/i386/_types.h">
      <type-tag size="I:128" alignment="I:8"><union-ref ref="0x100525c40"/>
        <typename><typedef-ref name="__darwin_mbstate_t" ref="0x100526750"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint64_t" ref="0x10054a020" loc="55:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x10054a020"/></typename>
      </type-int>
    </typedef>
    <typedef name="syscall_arg_t" ref="0x10106bb90" loc="128:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="syscall_arg_t" ref="0x10106bb90"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x1019304d0" loc="88:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x1019304d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_sigset_t" ref="0x100543020" loc="131:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_sigset_t" ref="0x100543020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x100714070" loc="444:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x100714070"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x1007172a0" loc="442:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x1007172a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x100555328" loc="274:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x100554d10"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x100555328"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least32_t" ref="0x10054bbc0" loc="65:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x10054bbc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_mutex_t" ref="0x100540020" loc="120:/usr/include/sys/_types.h">
      <type-tag size="I:64" alignment="I:8"><struct-ref name="_opaque_pthread_mutex_t" ref="0x100531020"/>
        <typename><typedef-ref name="__darwin_pthread_mutex_t" ref="0x100540020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__mbstate_t" ref="0x100526328" loc="79:/usr/include/i386/_types.h">
      <type-tag size="I:128" alignment="I:8"><union-ref ref="0x100525c40"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x100526328"/></typename>
      </type-tag>
    </typedef>
    <typedef name="wint_t" ref="0x101194a88" loc="70:/usr/include/runetype.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wint_t" ref="0x101194a88"/></typename>
      </type-int>
    </typedef>
    <typedef name="stack_t" ref="0x1007bebb8" loc="218:/usr/include/sys/_structs.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="__darwin_sigaltstack" ref="0x1007c11c8"/>
        <typename><typedef-ref name="stack_t" ref="0x1007bebb8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x101671ad0" loc="48:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x101671368"/>
        <typename><typedef-ref name="message_footer_t" ref="0x101671ad0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="off_t" ref="0x1011e3020" loc="75:/usr/include/stdio.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="off_t" ref="0x1011e3020"/></typename>
      </type-int>
    </typedef>
    <typedef name="ct_rune_t" ref="0x10100c088" loc="81:/usr/include/stdlib.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ct_rune_t" ref="0x10100c088"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0x10070a870" loc="434:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x10070a870"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_once_t" ref="0x100540b18" loc="124:/usr/include/sys/_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_once_t" ref="0x100532680"/>
        <typename><typedef-ref name="__darwin_pthread_once_t" ref="0x100540b18"/></typename>
      </type-tag>
    </typedef>
    <typedef name="storage_cookie_t" ref="0x101712af8" loc="44:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Storage.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="storage_cookie_t" ref="0x101712af8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int8_t" ref="0x10051ad30" loc="37:/usr/include/i386/_types.h">
      <documentation loc="519:/usr/include/sys/cdefs.h">
        <short>***************************************&#10;  Public darwin-specific feature macros&#10;****************************************</short>
      </documentation>
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x10051ad30"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x10054f7c8" loc="75:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_fast16_t" ref="0x10054f7c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wint_t" ref="0x10052a198" loc="110:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wint_t" ref="0x10052a198"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0x100552020" loc="106:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x100552020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x101660410" loc="8:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x101660410"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x1007116e8" loc="436:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x1007116e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_fsblkcnt_t" ref="0x100538550" loc="97:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_fsblkcnt_t" ref="0x100538550"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0x10054db80" loc="72:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast32_t" ref="0x10054db80"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x10054a7d0" loc="60:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x10054a7d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="useconds_t" ref="0x101ccb020" loc="127:/usr/include/unistd.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="useconds_t" ref="0x101ccb020"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0x10100ab70" loc="105:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x10100a5a8"/>
        <typename><typedef-ref name="ldiv_t" ref="0x10100ab70"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x10105d890" loc="95:/usr/include/i386/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x10105d890"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int16_t" ref="0x10105d128" loc="85:/usr/include/i386/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x10105d128"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_va_list" ref="0x1005285f0" loc="96:/usr/include/i386/_types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x100504510"/></type-tag>
        <typename><typedef-ref name="__darwin_va_list" ref="0x1005285f0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="siginfo_t" ref="0x1007cd7e8" loc="211:/usr/include/sys/signal.h">
      <type-tag size="I:104" alignment="I:8"><struct-ref name="__siginfo" ref="0x1007c4560"/>
        <typename><typedef-ref name="siginfo_t" ref="0x1007cd7e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="volume_id_t" ref="0x1016f9df0" loc="41:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/Storage.h">
      <documentation loc="32:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/interfaces/BlockRead.nc">
        <short>&#10; Read interface for the block storage abstraction described in&#10; TEP103.</short>
        <long>&#10; Read interface for the block storage abstraction described in&#10; TEP103.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision$ $Date$&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="volume_id_t" ref="0x1016f9df0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_id_t" ref="0x10053a188" loc="100:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_id_t" ref="0x10053a188"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wctype_t" ref="0x1005462b0" loc="42:/usr/include/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wctype_t" ref="0x1005462b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least64_t" ref="0x10054d020" loc="66:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x10054d020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0x100522d10" loc="44:/usr/include/i386/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x100522d10"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_ptrdiff_t" ref="0x100526d40" loc="84:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_ptrdiff_t" ref="0x100526d40"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_intptr_t" ref="0x100523c50" loc="49:/usr/include/i386/_types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__darwin_intptr_t" ref="0x100523c50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_pthread_condattr_t" ref="0x10053e5b8" loc="117:/usr/include/sys/_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_condattr_t" ref="0x100530350"/>
        <typename><typedef-ref name="__darwin_pthread_condattr_t" ref="0x10053e5b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x10109f020" loc="50:/usr/include/architecture/i386/math.h">
      <type-float cname="double" size="I:8" alignment="I:8">
        <typename><typedef-ref name="double_t" ref="0x10109f020"/></typename>
      </type-float>
    </typedef>
    <typedef name="bool" ref="0x101258d00" loc="57:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x101258d00"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x101402d38" loc="63:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <documentation loc="24:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:488" alignment="I:8"><struct-ref name="sim_noise_hash_t" ref="0x101403610"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x101402d38"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_mutexattr_t" ref="0x1005405d0" loc="122:/usr/include/sys/_types.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="_opaque_pthread_mutexattr_t" ref="0x100531b50"/>
        <typename><typedef-ref name="__darwin_pthread_mutexattr_t" ref="0x1005405d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_t" ref="0x100541bb0" loc="130:/usr/include/sys/_types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:1184" alignment="I:8"><struct-ref name="_opaque_pthread_t" ref="0x100535850"/></type-tag>
        <typename><typedef-ref name="__darwin_pthread_t" ref="0x100541bb0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x1012952f8" loc="43:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdarg.h">
      <documentation loc="24:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x100504510"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x1012952f8"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x100714740" loc="445:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x100714740"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_off_t" ref="0x10106b788" loc="120:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_off_t" ref="0x10106b788"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x1005480c8" loc="35:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x1005480c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0x1005469d0" loc="25:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x1005469d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_mach_port_name_t" ref="0x10053b020" loc="107:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_mach_port_name_t" ref="0x10053b020"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x10054f020" loc="73:/usr/lib/gcc/i686-apple-darwin10/4.2.1/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x10054f020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_wctrans_t" ref="0x100545e70" loc="40:/usr/include/_types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_wctrans_t" ref="0x100545e70"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0x1007c8cd0" loc="178:/usr/include/sys/signal.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x1007c8cd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_time_t" ref="0x10106b3d8" loc="119:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_time_t" ref="0x10106b3d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x10166d458" loc="19:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/types/message.h">
      <type-tag size="I:44" alignment="I:1"><nx_struct-ref name="message_t" ref="0x10166fac8"/>
        <typename><typedef-ref name="message_t" ref="0x10166d458"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x1007184c8" loc="438:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x1007184c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_useconds_t" ref="0x100543c70" loc="134:/usr/include/sys/_types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__darwin_useconds_t" ref="0x100543c70"/></typename>
      </type-int>
    </typedef>
    <typedef name="sig_t" ref="0x1007d0cb0" loc="354:/usr/include/sys/signal.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="sig_t" ref="0x1007d0cb0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="node_t" ref="0x101343ba0" loc="54:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/heap.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="node" ref="0x101343220"/>
        <typename><typedef-ref name="node_t" ref="0x101343ba0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_int8_t" ref="0x10070c450" loc="431:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x10070c450"/></typename>
      </type-int>
    </typedef>
    <typedef name="at45pageoffset_t" ref="0x101710850" loc="43:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/platforms/mica2/chips/at45db/HplAt45db_chip.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="at45pageoffset_t" ref="0x101710850"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x1013fdcf0" loc="75:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:80" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x101400198"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x1013fdcf0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x10077c638" loc="95:/usr/include/sys/wait.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x10077c638"/></typename>
      </type-int>
    </typedef>
    <typedef name="user_ssize_t" ref="0x10105b820" loc="116:/usr/include/i386/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="user_ssize_t" ref="0x10105b820"/></typename>
      </type-int>
    </typedef>
    <typedef name="__darwin_uuid_string_t" ref="0x100545710" loc="136:/usr/include/sys/_types.h">
      <type-array elements="I:37" size="I:37" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__darwin_uuid_string_t" ref="0x100545710"/></typename>
      </type-array>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x10071e590" loc="447:/opt/nesc/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x10071e590"/></typename>
      </type-int>
    </typedef>
    <typedef name="uart_id_t" ref="0x101658280" loc="72:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
      <documentation loc="60:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x101658280"/></typename>
      </type-int>
    </typedef>
    <typedef name="_RuneLocale" ref="0x10119a8e8" loc="127:/usr/include/runetype.h">
      <type-tag size="I:3208" alignment="I:8"><struct-ref ref="0x10119d148"/>
        <typename><typedef-ref name="_RuneLocale" ref="0x10119a8e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__darwin_pthread_rwlock_t" ref="0x1005410c8" loc="126:/usr/include/sys/_types.h">
      <type-tag size="I:200" alignment="I:8"><struct-ref name="_opaque_pthread_rwlock_t" ref="0x1005341d0"/>
        <typename><typedef-ref name="__darwin_pthread_rwlock_t" ref="0x1005410c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_grantedTask" ref="0x101c52aa8" loc="75:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="ArbiterP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_taskSuccess" ref="0x101cb5aa8" loc="112:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-array elements="I:3" size="I:12" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_taskCrcSuccess" ref="0x101dfa020" loc="104:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-array elements="I:1" size="I:4" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_taskFail" ref="0x101d74d40" loc="108:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/chips/at45db/sim/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDone" ref="0x101e67aa8" loc="60:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-array elements="I:5" size="I:20" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_startDone" ref="0x101ed0d40" loc="59:/Users/boli/Codes/TinyOS-2.x-jhu/opt/tinyos-2.x/tos/lib/tossim/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-array elements="I:4" size="I:16" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
  </typedefs>
</nesc>
