# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 86721 2011-11-02 00:16:14Z jmr@macports.org $

PortSystem 1.0
PortGroup python27 1.0

name                    py27-greenlet
version                 0.3.1
categories-append       devel
license                 MIT
platforms               darwin
maintainers             nomaintainer
description             Lightweight in-process concurrent programming
long_description        The \"greenlet\" package is a spin-off of \
                        Stackless, a version of CPython that supports \
                        micro-threads called \"tasklets\". Tasklets run \
                        pseudo-concurrently (typically in a single or \
                        a few OS-level threads) and are synchronized \
                        with data exchanges on \"channels\". \
                        \
                        A \"greenlet\", on the other hand, is a still \
                        more primitive notion of micro-thread with no \
                        implicit scheduling\; coroutines, in other \
                        words. This is useful when you want to control \
                        exactly when your code runs. You can build \
                        custom scheduled micro-threads on top of \
                        greenlet\; however, it seems that greenlets are \
                        useful on their own as a way to make advanced \
                        control flow structures. For example, we can \
                        recreate generators\; the difference with \
                        Python's own generators is that our generators \
                        can call nested functions and the nested \
                        functions can yield values too. Additionally, \
                        you don't need a \"yield\" keyword. See the \
                        example in test_generator.py. \
                        \
                        Greenlets are provided as a C extension module \
                        for the regular unmodified interpreter.

homepage                http://undefined.org/python/#greenlet
master_sites            http://pypi.python.org/packages/source/g/greenlet/
distname                greenlet-${version}
checksums               md5     8d75d7f3f659e915e286e1b0fa0e1c4d \
                        sha1    7e42d736dfbbd2f0b5ab7f78dc6fb65d966ca21e \
                        rmd160  2a83538cea206b9aed03773331311ddbaf8616a5
depends_lib             port:py27-distribute

livecheck.type          regex
livecheck.url           ${master_sites}
livecheck.regex         "greenlet-(\\d+(?:\\.\\d+)*)${extract.suffix}"
