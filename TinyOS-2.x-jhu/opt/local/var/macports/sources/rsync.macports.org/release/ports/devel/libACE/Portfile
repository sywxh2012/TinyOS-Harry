# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 89821 2012-02-11 16:17:38Z pixilla@macports.org $

PortSystem          1.0
PortGroup           muniversal 1.0

name                libACE
set name_package    ACE
version             6.0.8
distname            ${name_package}-${version}
categories          devel
maintainers         pixilla openmaintainer
platforms           darwin
license             BSD
description         ACE is an object-oriented framework that implements many core patterns for \
                    concurrent communication software.
long_description    The ADAPTIVE Communication Environment (ACE) is a freely available, \
                    open-source object-oriented (OO) framework that implements many core \
                    patterns for concurrent communication software. ACE provides a rich set \
                    of reusable C++ wrapper facades and framework components that perform \
                    common communication software tasks across a range of OS platforms. The \
                    communication software tasks provided by ACE include event \
                    demultiplexing and event handler dispatching, signal handling, service \
                    initialization, interprocess communication, shared memory management, \
                    message routing, dynamic (re)configuration of distributed services, \
                    concurrent execution and synchronization.

conflicts           libTAO

homepage            http://www.cs.wustl.edu/~schmidt/ACE.html
master_sites        http://download.dre.vanderbilt.edu/previous_versions

use_bzip2           yes

checksums           rmd160  31ebccd204aeeb1b1c5bb76c4cb9ae55bb4ca8e3 \
                    sha256  2f7bae738b62f0162965fecb0f49b7fdf61de987c1d08d238b328e1d0d1ab683

worksrcdir          ACE_wrappers

patch.pre_args      -p1
patchfiles          patch-ace-config.h.diff \
                    patch-include-makeinclude-platform_macros.GNU.diff

use_configure       no
use_parallel_build  no

set os.name {}
array set os.names {
     7  panther
     8  tiger
     9  leopard
    10  snowleopard
    11  lion
}
if {"darwin" == ${os.platform}} {
    foreach {key value} [array get os.names]  {
        if {${key} == ${os.major}} {
            set os.name ${value}
        }
    }
}

post-patch {
    reinplace "s|@MACOSX_NAME@|${os.name}|g" \
        ${worksrcpath}/ace/config.h \
}

build.env-append    DYLD_LIBRARY_PATH=${worksrcpath}/lib \
                    ACE_ROOT=${worksrcpath} \
                    INSTALL_PREFIX=${prefix} \
                    MACOSX_NAME=${os.name}

destroot.env-append DYLD_LIBRARY_PATH=${worksrcpath}/lib \
                    ACE_ROOT=${worksrcpath} \
                    INSTALL_PREFIX=${prefix} \
                    MACOSX_NAME=${os.name}

livecheck.url       ${master_sites}
livecheck.regex     ${name_package}-(\\d+\[0-9a-z.\]*)${extract.suffix}
