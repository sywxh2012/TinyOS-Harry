# $Id: Portfile 89990 2012-02-18 20:10:10Z jeremyhu@macports.org $

PortSystem              1.0
PortGroup select        1.0

set llvm_version        3.1
name                    clang-${llvm_version}
set suffix              mp-${llvm_version}
set sub_prefix          ${prefix}/libexec/llvm-${llvm_version}
categories              lang
platforms               darwin
maintainers             jeremyhu openmaintainer
license                 NCSA
description             C, C++, Objective C and Objective C++ compiler
long_description        Clang is an "LLVM native" C/C++/Objective-C compiler, \
                        which aims to deliver amazingly fast compiles (e.g. \
                        about 3x faster than GCC when compiling Objective-C \
                        code in a debug configuration), extremely useful error \
                        and warning messages and to provide a platform for \
                        building great source level tools. The included Clang \
                        Static Analyzer is a tool automatically finds bugs in \
                        your code, and is a great example of the sort of tool \
                        that can be built using the Clang frontend as a \
                        library to parse C/C++ code.

homepage                http://clang.llvm.org/

depends_lib             port:llvm-${llvm_version} port:libffi
depends_run             port:clang_select

default_variants        +analyzer
universal_variant       no

fetch.type              svn
svn.revision            150641
version                 ${llvm_version}-r${svn.revision}
set compiler_rt_rev     ${svn.revision}
revision                1
worksrcdir              trunk
svn.url                 http://llvm.org/svn/llvm-project/llvm/trunk

#version                 ${llvm_version}
#set compiler_rt_rev     150641
#epoch                   1
#master_sites            http://llvm.org/releases/${version}/
#extract.suffix          .tgz
#distfiles               llvm-${version}${extract.suffix} clang-${version}${extract.suffix}
#worksrcdir              llvm-${version}.src

patchfiles install_target.patch

build.target            clang-only
destroot.target         install-clang
build.env-append        REQUIRE_RTTI=1
configure.cppflags
configure.ldflags
configure.pre_args-delete --prefix=${prefix}
configure.args          --enable-bindings=none --enable-libffi --enable-shared --enable-jit \
                        --enable-optimized --enable-assertions --disable-profiling \
                        --enable-debug-symbols --disable-debug-runtime \
                        --prefix="${sub_prefix}"

select.group    clang
select.file     ${filespath}/mp-${name}

build.args-append VERBOSE=1

platform darwin {
    depends_run-append      port:ld64

    if {${build_arch} == "i386" } {
        configure.pre_args-append --build=i686-apple-darwin${os.major}
    } else {
        configure.pre_args-append --build=${build_arch}-apple-darwin${os.major}
    }
}

platform darwin 8 {
    configure.args-delete   --enable-shared --enable-jit
}

post-extract {
    system "cd ${worksrcpath}/tools && svn co -r ${svn.revision} http://llvm.org/svn/llvm-project/cfe/trunk clang"
    #file rename ${workpath}/clang-${llvm_version}.src ${worksrcpath}/tools/clang
    system "cd ${worksrcpath}/projects && svn co -r ${compiler_rt_rev} http://llvm.org/svn/llvm-project/compiler-rt/trunk compiler-rt"
}

variant arm_runtime description {Build and install the arm runtime for iOS development (requires iOS SDK)} {}

post-patch {
    # http://trac.macports.org/ticket/33272
    if {![variant_isset arm_runtime]} {
        reinplace {/^SubDirs/ s/arm//} ${worksrcpath}/projects/compiler-rt/lib/Makefile.mk
        reinplace {/^UniversalArchs/ s/arm[^ )]* *//g} ${worksrcpath}/projects/compiler-rt/make/platform/clang_darwin.mk
    }
}

variant analyzer description {Install clang static analyzer} {
    depends_run-append  bin:python:python26 bin:perl:perl5
    post-patch {
        reinplace "s|/usr/bin/env perl|${prefix}/bin/perl5|g" \
            ${worksrcpath}/tools/clang/tools/scan-build/ccc-analyzer \
            ${worksrcpath}/tools/clang/tools/scan-build/c++-analyzer \
            ${worksrcpath}/tools/clang/tools/scan-build/scan-build
        reinplace "s|/usr/bin/env python|${prefix}/bin/python2.6|g" \
            ${worksrcpath}/tools/clang/tools/scan-build/set-xcode-analyzer \
            ${worksrcpath}/tools/clang/tools/scan-view/scan-view
    }

    post-destroot {
        file mkdir ${destroot}${sub_prefix}/libexec
        file copy ${worksrcpath}/tools/clang/tools/scan-build ${destroot}${sub_prefix}/libexec/scan-build
        file copy ${worksrcpath}/tools/clang/tools/scan-view ${destroot}${sub_prefix}/libexec/scan-view

        file delete -force ${destroot}${sub_prefix}/libexec/scan-build/.svn
        file delete -force ${destroot}${sub_prefix}/libexec/scan-view/.svn
        file delete -force ${destroot}${sub_prefix}/libexec/scan-view/Resources/.svn

        ln -s ${sub_prefix}/libexec/scan-build/scan-build ${destroot}${sub_prefix}/bin/scan-build
        ln -s ${sub_prefix}/libexec/scan-view/scan-view ${destroot}${sub_prefix}/bin/scan-view
        ln -s ${sub_prefix}/bin ${destroot}${sub_prefix}/libexec/scan-build/bin

        xinstall -m 755 "${filespath}/llvm-bin" "${destroot}${prefix}/bin/scan-build-${suffix}"
        reinplace "s:EXEC_PATH:${sub_prefix}/bin/scan-build:" "${destroot}${prefix}/bin/scan-build-${suffix}"

        xinstall -m 755 "${filespath}/llvm-bin" "${destroot}${prefix}/bin/scan-view-${suffix}"
        reinplace "s:EXEC_PATH:${sub_prefix}/bin/scan-view:" "${destroot}${prefix}/bin/scan-view-${suffix}"
    }
}

post-destroot {
    foreach bin [glob ${destroot}${sub_prefix}/bin/*] {
        set bin_filename [string map "${sub_prefix} ${prefix}" ${bin}]-${suffix}
        set exec_path [string map "${destroot}${sub_prefix} ${sub_prefix}" ${bin}]

        xinstall -m 755 "${filespath}/llvm-bin" "${bin_filename}"
        reinplace "s:EXEC_PATH:${exec_path}:" "${bin_filename}"
    }

    system "install_name_tool -id ${sub_prefix}/lib/libclang.dylib ${destroot}${sub_prefix}/lib/libclang.dylib"
    system "install_name_tool -change @executable_path/../lib/libLLVM-${llvm_version}svn.dylib ${sub_prefix}/lib/libLLVM-${llvm_version}svn.dylib ${destroot}${sub_prefix}/lib/libclang.dylib"
}
